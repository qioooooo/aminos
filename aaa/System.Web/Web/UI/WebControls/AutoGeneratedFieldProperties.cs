using System;
using System.Security.Permissions;

namespace System.Web.UI.WebControls
{
	// Token: 0x020004C6 RID: 1222
	[AspNetHostingPermission(SecurityAction.LinkDemand, Level = AspNetHostingPermissionLevel.Minimal)]
	public sealed class AutoGeneratedFieldProperties : IStateManager
	{
		// Token: 0x06003A47 RID: 14919 RVA: 0x000F643A File Offset: 0x000F543A
		public AutoGeneratedFieldProperties()
		{
			this._statebag = new StateBag();
		}

		// Token: 0x17000D3E RID: 3390
		// (get) Token: 0x06003A48 RID: 14920 RVA: 0x000F6450 File Offset: 0x000F5450
		// (set) Token: 0x06003A49 RID: 14921 RVA: 0x000F647D File Offset: 0x000F547D
		public string DataField
		{
			get
			{
				object obj = this.ViewState["DataField"];
				if (obj != null)
				{
					return (string)obj;
				}
				return string.Empty;
			}
			set
			{
				this.ViewState["DataField"] = value;
			}
		}

		// Token: 0x17000D3F RID: 3391
		// (get) Token: 0x06003A4A RID: 14922 RVA: 0x000F6490 File Offset: 0x000F5490
		// (set) Token: 0x06003A4B RID: 14923 RVA: 0x000F64B9 File Offset: 0x000F54B9
		public bool IsReadOnly
		{
			get
			{
				object obj = this.ViewState["IsReadOnly"];
				return obj != null && (bool)obj;
			}
			set
			{
				this.ViewState["IsReadOnly"] = value;
			}
		}

		// Token: 0x17000D40 RID: 3392
		// (get) Token: 0x06003A4C RID: 14924 RVA: 0x000F64D4 File Offset: 0x000F54D4
		// (set) Token: 0x06003A4D RID: 14925 RVA: 0x000F6501 File Offset: 0x000F5501
		public string Name
		{
			get
			{
				object obj = this.ViewState["Name"];
				if (obj != null)
				{
					return (string)obj;
				}
				return string.Empty;
			}
			set
			{
				this.ViewState["Name"] = value;
			}
		}

		// Token: 0x17000D41 RID: 3393
		// (get) Token: 0x06003A4E RID: 14926 RVA: 0x000F6514 File Offset: 0x000F5514
		// (set) Token: 0x06003A4F RID: 14927 RVA: 0x000F653D File Offset: 0x000F553D
		public Type Type
		{
			get
			{
				object obj = this.ViewState["Type"];
				if (obj != null)
				{
					return (Type)obj;
				}
				return null;
			}
			set
			{
				this.ViewState["Type"] = value;
			}
		}

		// Token: 0x17000D42 RID: 3394
		// (get) Token: 0x06003A50 RID: 14928 RVA: 0x000F6550 File Offset: 0x000F5550
		private StateBag ViewState
		{
			get
			{
				return this._statebag;
			}
		}

		// Token: 0x17000D43 RID: 3395
		// (get) Token: 0x06003A51 RID: 14929 RVA: 0x000F6558 File Offset: 0x000F5558
		bool IStateManager.IsTrackingViewState
		{
			get
			{
				return this._isTracking;
			}
		}

		// Token: 0x06003A52 RID: 14930 RVA: 0x000F6560 File Offset: 0x000F5560
		void IStateManager.LoadViewState(object state)
		{
			if (state != null)
			{
				((IStateManager)this.ViewState).LoadViewState(state);
			}
		}

		// Token: 0x06003A53 RID: 14931 RVA: 0x000F6574 File Offset: 0x000F5574
		object IStateManager.SaveViewState()
		{
			return ((IStateManager)this.ViewState).SaveViewState();
		}

		// Token: 0x06003A54 RID: 14932 RVA: 0x000F658E File Offset: 0x000F558E
		void IStateManager.TrackViewState()
		{
			this._isTracking = true;
			this.ViewState.TrackViewState();
		}

		// Token: 0x04002681 RID: 9857
		private bool _isTracking;

		// Token: 0x04002682 RID: 9858
		private StateBag _statebag;
	}
}
