using System;
using System.Collections;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Drawing.Design;
using System.Globalization;
using System.IO;
using System.Security.Permissions;
using System.Text;
using System.Web.UI.WebControls.Adapters;
using System.Web.Util;

namespace System.Web.UI.WebControls
{
	// Token: 0x02000557 RID: 1367
	[Designer("System.Web.UI.Design.WebControls.DetailsViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
	[DefaultEvent("PageIndexChanging")]
	[SupportsEventValidation]
	[ControlValueProperty("SelectedValue")]
	[ToolboxData("<{0}:DetailsView runat=\"server\" Width=\"125px\" Height=\"50px\"></{0}:DetailsView>")]
	[AspNetHostingPermission(SecurityAction.LinkDemand, Level = AspNetHostingPermissionLevel.Minimal)]
	[AspNetHostingPermission(SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.Minimal)]
	public class DetailsView : CompositeDataBoundControl, IDataItemContainer, INamingContainer, ICallbackContainer, ICallbackEventHandler, IPostBackEventHandler, IPostBackContainer
	{
		// Token: 0x1700105C RID: 4188
		// (get) Token: 0x06004335 RID: 17205 RVA: 0x001155C4 File Offset: 0x001145C4
		// (set) Token: 0x06004336 RID: 17206 RVA: 0x001155F0 File Offset: 0x001145F0
		[WebSysDescription("DetailsView_AllowPaging")]
		[WebCategory("Paging")]
		[DefaultValue(false)]
		public virtual bool AllowPaging
		{
			get
			{
				object obj = this.ViewState["AllowPaging"];
				return obj != null && (bool)obj;
			}
			set
			{
				bool allowPaging = this.AllowPaging;
				if (value != allowPaging)
				{
					this.ViewState["AllowPaging"] = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x1700105D RID: 4189
		// (get) Token: 0x06004337 RID: 17207 RVA: 0x0011562D File Offset: 0x0011462D
		[NotifyParentProperty(true)]
		[WebCategory("Styles")]
		[DefaultValue(null)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("DetailsView_AlternatingRowStyle")]
		public TableItemStyle AlternatingRowStyle
		{
			get
			{
				if (this._alternatingRowStyle == null)
				{
					this._alternatingRowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._alternatingRowStyle).TrackViewState();
					}
				}
				return this._alternatingRowStyle;
			}
		}

		// Token: 0x1700105E RID: 4190
		// (get) Token: 0x06004338 RID: 17208 RVA: 0x0011565C File Offset: 0x0011465C
		// (set) Token: 0x06004339 RID: 17209 RVA: 0x00115688 File Offset: 0x00114688
		[WebCategory("Behavior")]
		[DefaultValue(false)]
		[WebSysDescription("DetailsView_AutoGenerateDeleteButton")]
		public virtual bool AutoGenerateDeleteButton
		{
			get
			{
				object obj = this.ViewState["AutoGenerateDeleteButton"];
				return obj != null && (bool)obj;
			}
			set
			{
				bool autoGenerateDeleteButton = this.AutoGenerateDeleteButton;
				if (value != autoGenerateDeleteButton)
				{
					this.ViewState["AutoGenerateDeleteButton"] = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x1700105F RID: 4191
		// (get) Token: 0x0600433A RID: 17210 RVA: 0x001156C8 File Offset: 0x001146C8
		// (set) Token: 0x0600433B RID: 17211 RVA: 0x001156F4 File Offset: 0x001146F4
		[WebCategory("Behavior")]
		[DefaultValue(false)]
		[WebSysDescription("DetailsView_AutoGenerateEditButton")]
		public virtual bool AutoGenerateEditButton
		{
			get
			{
				object obj = this.ViewState["AutoGenerateEditButton"];
				return obj != null && (bool)obj;
			}
			set
			{
				bool autoGenerateEditButton = this.AutoGenerateEditButton;
				if (value != autoGenerateEditButton)
				{
					this.ViewState["AutoGenerateEditButton"] = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x17001060 RID: 4192
		// (get) Token: 0x0600433C RID: 17212 RVA: 0x00115734 File Offset: 0x00114734
		// (set) Token: 0x0600433D RID: 17213 RVA: 0x00115760 File Offset: 0x00114760
		[DefaultValue(false)]
		[WebCategory("Behavior")]
		[WebSysDescription("DetailsView_AutoGenerateInsertButton")]
		public virtual bool AutoGenerateInsertButton
		{
			get
			{
				object obj = this.ViewState["AutoGenerateInsertButton"];
				return obj != null && (bool)obj;
			}
			set
			{
				bool autoGenerateInsertButton = this.AutoGenerateInsertButton;
				if (value != autoGenerateInsertButton)
				{
					this.ViewState["AutoGenerateInsertButton"] = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x17001061 RID: 4193
		// (get) Token: 0x0600433E RID: 17214 RVA: 0x001157A0 File Offset: 0x001147A0
		// (set) Token: 0x0600433F RID: 17215 RVA: 0x001157CC File Offset: 0x001147CC
		[WebCategory("Behavior")]
		[DefaultValue(true)]
		[WebSysDescription("DetailsView_AutoGenerateRows")]
		public virtual bool AutoGenerateRows
		{
			get
			{
				object obj = this.ViewState["AutoGenerateRows"];
				return obj == null || (bool)obj;
			}
			set
			{
				bool autoGenerateRows = this.AutoGenerateRows;
				if (value != autoGenerateRows)
				{
					this.ViewState["AutoGenerateRows"] = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x17001062 RID: 4194
		// (get) Token: 0x06004340 RID: 17216 RVA: 0x00115809 File Offset: 0x00114809
		// (set) Token: 0x06004341 RID: 17217 RVA: 0x00115829 File Offset: 0x00114829
		[DefaultValue("")]
		[WebCategory("Appearance")]
		[WebSysDescription("WebControl_BackImageUrl")]
		[Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(UITypeEditor))]
		[UrlProperty]
		public virtual string BackImageUrl
		{
			get
			{
				if (!base.ControlStyleCreated)
				{
					return string.Empty;
				}
				return ((TableStyle)base.ControlStyle).BackImageUrl;
			}
			set
			{
				((TableStyle)base.ControlStyle).BackImageUrl = value;
			}
		}

		// Token: 0x17001063 RID: 4195
		// (get) Token: 0x06004342 RID: 17218 RVA: 0x0011583C File Offset: 0x0011483C
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public virtual DetailsViewRow BottomPagerRow
		{
			get
			{
				if (this._bottomPagerRow == null)
				{
					this.EnsureChildControls();
				}
				return this._bottomPagerRow;
			}
		}

		// Token: 0x17001064 RID: 4196
		// (get) Token: 0x06004343 RID: 17219 RVA: 0x00115854 File Offset: 0x00114854
		private IOrderedDictionary BoundFieldValues
		{
			get
			{
				if (this._boundFieldValues == null)
				{
					int num = this.Fields.Count;
					if (this.AutoGenerateRows)
					{
						num += 10;
					}
					this._boundFieldValues = new OrderedDictionary(num);
				}
				return this._boundFieldValues;
			}
		}

		// Token: 0x17001065 RID: 4197
		// (get) Token: 0x06004344 RID: 17220 RVA: 0x00115894 File Offset: 0x00114894
		// (set) Token: 0x06004345 RID: 17221 RVA: 0x001158C1 File Offset: 0x001148C1
		[WebSysDescription("DataControls_Caption")]
		[Localizable(true)]
		[DefaultValue("")]
		[WebCategory("Accessibility")]
		public virtual string Caption
		{
			get
			{
				string text = (string)this.ViewState["Caption"];
				if (text == null)
				{
					return string.Empty;
				}
				return text;
			}
			set
			{
				this.ViewState["Caption"] = value;
			}
		}

		// Token: 0x17001066 RID: 4198
		// (get) Token: 0x06004346 RID: 17222 RVA: 0x001158D4 File Offset: 0x001148D4
		// (set) Token: 0x06004347 RID: 17223 RVA: 0x001158FD File Offset: 0x001148FD
		[DefaultValue(TableCaptionAlign.NotSet)]
		[WebSysDescription("WebControl_CaptionAlign")]
		[WebCategory("Accessibility")]
		public virtual TableCaptionAlign CaptionAlign
		{
			get
			{
				object obj = this.ViewState["CaptionAlign"];
				if (obj == null)
				{
					return TableCaptionAlign.NotSet;
				}
				return (TableCaptionAlign)obj;
			}
			set
			{
				if (value < TableCaptionAlign.NotSet || value > TableCaptionAlign.Right)
				{
					throw new ArgumentOutOfRangeException("value");
				}
				this.ViewState["CaptionAlign"] = value;
			}
		}

		// Token: 0x17001067 RID: 4199
		// (get) Token: 0x06004348 RID: 17224 RVA: 0x00115928 File Offset: 0x00114928
		// (set) Token: 0x06004349 RID: 17225 RVA: 0x00115944 File Offset: 0x00114944
		[WebCategory("Layout")]
		[WebSysDescription("DetailsView_CellPadding")]
		[DefaultValue(-1)]
		public virtual int CellPadding
		{
			get
			{
				if (!base.ControlStyleCreated)
				{
					return -1;
				}
				return ((TableStyle)base.ControlStyle).CellPadding;
			}
			set
			{
				((TableStyle)base.ControlStyle).CellPadding = value;
			}
		}

		// Token: 0x17001068 RID: 4200
		// (get) Token: 0x0600434A RID: 17226 RVA: 0x00115957 File Offset: 0x00114957
		// (set) Token: 0x0600434B RID: 17227 RVA: 0x00115973 File Offset: 0x00114973
		[WebSysDescription("DetailsView_CellSpacing")]
		[WebCategory("Layout")]
		[DefaultValue(0)]
		public virtual int CellSpacing
		{
			get
			{
				if (!base.ControlStyleCreated)
				{
					return 0;
				}
				return ((TableStyle)base.ControlStyle).CellSpacing;
			}
			set
			{
				((TableStyle)base.ControlStyle).CellSpacing = value;
			}
		}

		// Token: 0x17001069 RID: 4201
		// (get) Token: 0x0600434C RID: 17228 RVA: 0x00115986 File Offset: 0x00114986
		[DefaultValue(null)]
		[WebCategory("Styles")]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("DetailsView_CommandRowStyle")]
		public TableItemStyle CommandRowStyle
		{
			get
			{
				if (this._commandRowStyle == null)
				{
					this._commandRowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._commandRowStyle).TrackViewState();
					}
				}
				return this._commandRowStyle;
			}
		}

		// Token: 0x1700106A RID: 4202
		// (get) Token: 0x0600434D RID: 17229 RVA: 0x001159B4 File Offset: 0x001149B4
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public DetailsViewMode CurrentMode
		{
			get
			{
				return this.Mode;
			}
		}

		// Token: 0x1700106B RID: 4203
		// (get) Token: 0x0600434E RID: 17230 RVA: 0x001159BC File Offset: 0x001149BC
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public virtual object DataItem
		{
			get
			{
				if (this.CurrentMode == DetailsViewMode.Insert)
				{
					return null;
				}
				return this._dataItem;
			}
		}

		// Token: 0x1700106C RID: 4204
		// (get) Token: 0x0600434F RID: 17231 RVA: 0x001159CF File Offset: 0x001149CF
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public int DataItemCount
		{
			get
			{
				return this.PageCount;
			}
		}

		// Token: 0x1700106D RID: 4205
		// (get) Token: 0x06004350 RID: 17232 RVA: 0x001159D7 File Offset: 0x001149D7
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public virtual int DataItemIndex
		{
			get
			{
				if (this.CurrentMode == DetailsViewMode.Insert)
				{
					return -1;
				}
				return this._dataItemIndex;
			}
		}

		// Token: 0x1700106E RID: 4206
		// (get) Token: 0x06004351 RID: 17233 RVA: 0x001159EC File Offset: 0x001149EC
		// (set) Token: 0x06004352 RID: 17234 RVA: 0x00115A1C File Offset: 0x00114A1C
		[Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(UITypeEditor))]
		[DefaultValue(null)]
		[TypeConverter(typeof(StringArrayConverter))]
		[WebCategory("Data")]
		[WebSysDescription("DataControls_DataKeyNames")]
		public virtual string[] DataKeyNames
		{
			get
			{
				object dataKeyNames = this._dataKeyNames;
				if (dataKeyNames != null)
				{
					return (string[])((string[])dataKeyNames).Clone();
				}
				return new string[0];
			}
			set
			{
				if (!DataBoundControlHelper.CompareStringArrays(value, this.DataKeyNamesInternal))
				{
					if (value != null)
					{
						this._dataKeyNames = (string[])value.Clone();
					}
					else
					{
						this._dataKeyNames = null;
					}
					this._keyTable = null;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x1700106F RID: 4207
		// (get) Token: 0x06004353 RID: 17235 RVA: 0x00115A6C File Offset: 0x00114A6C
		private string[] DataKeyNamesInternal
		{
			get
			{
				object dataKeyNames = this._dataKeyNames;
				if (dataKeyNames != null)
				{
					return (string[])dataKeyNames;
				}
				return new string[0];
			}
		}

		// Token: 0x17001070 RID: 4208
		// (get) Token: 0x06004354 RID: 17236 RVA: 0x00115A90 File Offset: 0x00114A90
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[WebSysDescription("DetailsView_DataKey")]
		public virtual DataKey DataKey
		{
			get
			{
				if (this._dataKey == null)
				{
					this._dataKey = new DataKey(this.KeyTable);
				}
				return this._dataKey;
			}
		}

		// Token: 0x17001071 RID: 4209
		// (get) Token: 0x06004355 RID: 17237 RVA: 0x00115AB1 File Offset: 0x00114AB1
		// (set) Token: 0x06004356 RID: 17238 RVA: 0x00115AB9 File Offset: 0x00114AB9
		[WebCategory("Behavior")]
		[DefaultValue(DetailsViewMode.ReadOnly)]
		[WebSysDescription("View_DefaultMode")]
		public virtual DetailsViewMode DefaultMode
		{
			get
			{
				return this._defaultMode;
			}
			set
			{
				if (value < DetailsViewMode.ReadOnly || value > DetailsViewMode.Insert)
				{
					throw new ArgumentOutOfRangeException("value");
				}
				this._defaultMode = value;
			}
		}

		// Token: 0x17001072 RID: 4210
		// (get) Token: 0x06004357 RID: 17239 RVA: 0x00115AD5 File Offset: 0x00114AD5
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[WebCategory("Styles")]
		[DefaultValue(null)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("View_EditRowStyle")]
		public TableItemStyle EditRowStyle
		{
			get
			{
				if (this._editRowStyle == null)
				{
					this._editRowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._editRowStyle).TrackViewState();
					}
				}
				return this._editRowStyle;
			}
		}

		// Token: 0x17001073 RID: 4211
		// (get) Token: 0x06004358 RID: 17240 RVA: 0x00115B03 File Offset: 0x00114B03
		[DefaultValue(null)]
		[WebCategory("Styles")]
		[WebSysDescription("View_EmptyDataRowStyle")]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		public TableItemStyle EmptyDataRowStyle
		{
			get
			{
				if (this._emptyDataRowStyle == null)
				{
					this._emptyDataRowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._emptyDataRowStyle).TrackViewState();
					}
				}
				return this._emptyDataRowStyle;
			}
		}

		// Token: 0x17001074 RID: 4212
		// (get) Token: 0x06004359 RID: 17241 RVA: 0x00115B31 File Offset: 0x00114B31
		// (set) Token: 0x0600435A RID: 17242 RVA: 0x00115B39 File Offset: 0x00114B39
		[WebSysDescription("View_EmptyDataTemplate")]
		[Browsable(false)]
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[TemplateContainer(typeof(DetailsView))]
		public virtual ITemplate EmptyDataTemplate
		{
			get
			{
				return this._emptyDataTemplate;
			}
			set
			{
				this._emptyDataTemplate = value;
			}
		}

		// Token: 0x17001075 RID: 4213
		// (get) Token: 0x0600435B RID: 17243 RVA: 0x00115B44 File Offset: 0x00114B44
		// (set) Token: 0x0600435C RID: 17244 RVA: 0x00115B71 File Offset: 0x00114B71
		[Localizable(true)]
		[WebSysDescription("View_EmptyDataText")]
		[WebCategory("Appearance")]
		[DefaultValue("")]
		public virtual string EmptyDataText
		{
			get
			{
				object obj = this.ViewState["EmptyDataText"];
				if (obj != null)
				{
					return (string)obj;
				}
				return string.Empty;
			}
			set
			{
				this.ViewState["EmptyDataText"] = value;
			}
		}

		// Token: 0x17001076 RID: 4214
		// (get) Token: 0x0600435D RID: 17245 RVA: 0x00115B84 File Offset: 0x00114B84
		// (set) Token: 0x0600435E RID: 17246 RVA: 0x00115BAD File Offset: 0x00114BAD
		[WebCategory("Behavior")]
		[WebSysDescription("DataBoundControl_EnableModelValidation")]
		[DefaultValue(false)]
		public virtual bool EnableModelValidation
		{
			get
			{
				object obj = this.ViewState["EnableModelValidation"];
				return obj != null && (bool)obj;
			}
			set
			{
				this.ViewState["EnableModelValidation"] = value;
			}
		}

		// Token: 0x17001077 RID: 4215
		// (get) Token: 0x0600435F RID: 17247 RVA: 0x00115BC8 File Offset: 0x00114BC8
		// (set) Token: 0x06004360 RID: 17248 RVA: 0x00115BF1 File Offset: 0x00114BF1
		[WebSysDescription("DetailsView_EnablePagingCallbacks")]
		[WebCategory("Behavior")]
		[DefaultValue(false)]
		public virtual bool EnablePagingCallbacks
		{
			get
			{
				object obj = this.ViewState["EnablePagingCallbacks"];
				return obj != null && (bool)obj;
			}
			set
			{
				this.ViewState["EnablePagingCallbacks"] = value;
			}
		}

		// Token: 0x17001078 RID: 4216
		// (get) Token: 0x06004361 RID: 17249 RVA: 0x00115C09 File Offset: 0x00114C09
		[DefaultValue(null)]
		[WebCategory("Styles")]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("DetailsView_FieldHeaderStyle")]
		public TableItemStyle FieldHeaderStyle
		{
			get
			{
				if (this._fieldHeaderStyle == null)
				{
					this._fieldHeaderStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._fieldHeaderStyle).TrackViewState();
					}
				}
				return this._fieldHeaderStyle;
			}
		}

		// Token: 0x17001079 RID: 4217
		// (get) Token: 0x06004362 RID: 17250 RVA: 0x00115C38 File Offset: 0x00114C38
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("DetailsView_Fields")]
		[MergableProperty(false)]
		[Editor("System.Web.UI.Design.WebControls.DataControlFieldTypeEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(UITypeEditor))]
		[WebCategory("Default")]
		public virtual DataControlFieldCollection Fields
		{
			get
			{
				if (this._fieldCollection == null)
				{
					this._fieldCollection = new DataControlFieldCollection();
					this._fieldCollection.FieldsChanged += this.OnFieldsChanged;
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._fieldCollection).TrackViewState();
					}
				}
				return this._fieldCollection;
			}
		}

		// Token: 0x1700107A RID: 4218
		// (get) Token: 0x06004363 RID: 17251 RVA: 0x00115C88 File Offset: 0x00114C88
		// (set) Token: 0x06004364 RID: 17252 RVA: 0x00115CB1 File Offset: 0x00114CB1
		private int FirstDisplayedPageIndex
		{
			get
			{
				object obj = this.ViewState["FirstDisplayedPageIndex"];
				if (obj != null)
				{
					return (int)obj;
				}
				return -1;
			}
			set
			{
				this.ViewState["FirstDisplayedPageIndex"] = value;
			}
		}

		// Token: 0x1700107B RID: 4219
		// (get) Token: 0x06004365 RID: 17253 RVA: 0x00115CC9 File Offset: 0x00114CC9
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public virtual DetailsViewRow FooterRow
		{
			get
			{
				if (this._footerRow == null)
				{
					this.EnsureChildControls();
				}
				return this._footerRow;
			}
		}

		// Token: 0x1700107C RID: 4220
		// (get) Token: 0x06004366 RID: 17254 RVA: 0x00115CDF File Offset: 0x00114CDF
		[WebCategory("Styles")]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[DefaultValue(null)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[WebSysDescription("DetailsView_FooterStyle")]
		public TableItemStyle FooterStyle
		{
			get
			{
				if (this._footerStyle == null)
				{
					this._footerStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._footerStyle).TrackViewState();
					}
				}
				return this._footerStyle;
			}
		}

		// Token: 0x1700107D RID: 4221
		// (get) Token: 0x06004367 RID: 17255 RVA: 0x00115D0D File Offset: 0x00114D0D
		// (set) Token: 0x06004368 RID: 17256 RVA: 0x00115D15 File Offset: 0x00114D15
		[Browsable(false)]
		[WebSysDescription("DetailsView_FooterTemplate")]
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[TemplateContainer(typeof(DetailsView))]
		public virtual ITemplate FooterTemplate
		{
			get
			{
				return this._footerTemplate;
			}
			set
			{
				this._footerTemplate = value;
			}
		}

		// Token: 0x1700107E RID: 4222
		// (get) Token: 0x06004369 RID: 17257 RVA: 0x00115D20 File Offset: 0x00114D20
		// (set) Token: 0x0600436A RID: 17258 RVA: 0x00115D4D File Offset: 0x00114D4D
		[WebCategory("Appearance")]
		[Localizable(true)]
		[DefaultValue("")]
		[WebSysDescription("View_FooterText")]
		public virtual string FooterText
		{
			get
			{
				object obj = this.ViewState["FooterText"];
				if (obj != null)
				{
					return (string)obj;
				}
				return string.Empty;
			}
			set
			{
				this.ViewState["FooterText"] = value;
			}
		}

		// Token: 0x1700107F RID: 4223
		// (get) Token: 0x0600436B RID: 17259 RVA: 0x00115D60 File Offset: 0x00114D60
		// (set) Token: 0x0600436C RID: 17260 RVA: 0x00115D7C File Offset: 0x00114D7C
		[WebSysDescription("DataControls_GridLines")]
		[WebCategory("Appearance")]
		[DefaultValue(GridLines.Both)]
		public virtual GridLines GridLines
		{
			get
			{
				if (!base.ControlStyleCreated)
				{
					return GridLines.Both;
				}
				return ((TableStyle)base.ControlStyle).GridLines;
			}
			set
			{
				((TableStyle)base.ControlStyle).GridLines = value;
			}
		}

		// Token: 0x17001080 RID: 4224
		// (get) Token: 0x0600436D RID: 17261 RVA: 0x00115D8F File Offset: 0x00114D8F
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public virtual DetailsViewRow HeaderRow
		{
			get
			{
				if (this._headerRow == null)
				{
					this.EnsureChildControls();
				}
				return this._headerRow;
			}
		}

		// Token: 0x17001081 RID: 4225
		// (get) Token: 0x0600436E RID: 17262 RVA: 0x00115DA5 File Offset: 0x00114DA5
		[DefaultValue(null)]
		[WebCategory("Styles")]
		[WebSysDescription("WebControl_HeaderStyle")]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		public TableItemStyle HeaderStyle
		{
			get
			{
				if (this._headerStyle == null)
				{
					this._headerStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._headerStyle).TrackViewState();
					}
				}
				return this._headerStyle;
			}
		}

		// Token: 0x17001082 RID: 4226
		// (get) Token: 0x0600436F RID: 17263 RVA: 0x00115DD3 File Offset: 0x00114DD3
		// (set) Token: 0x06004370 RID: 17264 RVA: 0x00115DDB File Offset: 0x00114DDB
		[Browsable(false)]
		[TemplateContainer(typeof(DetailsView))]
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("WebControl_HeaderTemplate")]
		public virtual ITemplate HeaderTemplate
		{
			get
			{
				return this._headerTemplate;
			}
			set
			{
				this._headerTemplate = value;
			}
		}

		// Token: 0x17001083 RID: 4227
		// (get) Token: 0x06004371 RID: 17265 RVA: 0x00115DE4 File Offset: 0x00114DE4
		// (set) Token: 0x06004372 RID: 17266 RVA: 0x00115E11 File Offset: 0x00114E11
		[WebSysDescription("View_HeaderText")]
		[Localizable(true)]
		[WebCategory("Appearance")]
		[DefaultValue("")]
		public virtual string HeaderText
		{
			get
			{
				object obj = this.ViewState["HeaderText"];
				if (obj != null)
				{
					return (string)obj;
				}
				return string.Empty;
			}
			set
			{
				this.ViewState["HeaderText"] = value;
			}
		}

		// Token: 0x17001084 RID: 4228
		// (get) Token: 0x06004373 RID: 17267 RVA: 0x00115E24 File Offset: 0x00114E24
		// (set) Token: 0x06004374 RID: 17268 RVA: 0x00115E40 File Offset: 0x00114E40
		[WebSysDescription("WebControl_HorizontalAlign")]
		[Category("Layout")]
		[DefaultValue(HorizontalAlign.NotSet)]
		public virtual HorizontalAlign HorizontalAlign
		{
			get
			{
				if (!base.ControlStyleCreated)
				{
					return HorizontalAlign.NotSet;
				}
				return ((TableStyle)base.ControlStyle).HorizontalAlign;
			}
			set
			{
				((TableStyle)base.ControlStyle).HorizontalAlign = value;
			}
		}

		// Token: 0x17001085 RID: 4229
		// (get) Token: 0x06004375 RID: 17269 RVA: 0x00115E53 File Offset: 0x00114E53
		[NotifyParentProperty(true)]
		[WebCategory("Styles")]
		[DefaultValue(null)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("View_InsertRowStyle")]
		public TableItemStyle InsertRowStyle
		{
			get
			{
				if (this._insertRowStyle == null)
				{
					this._insertRowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._insertRowStyle).TrackViewState();
					}
				}
				return this._insertRowStyle;
			}
		}

		// Token: 0x17001086 RID: 4230
		// (get) Token: 0x06004376 RID: 17270 RVA: 0x00115E81 File Offset: 0x00114E81
		private OrderedDictionary KeyTable
		{
			get
			{
				if (this._keyTable == null)
				{
					this._keyTable = new OrderedDictionary(this.DataKeyNamesInternal.Length);
				}
				return this._keyTable;
			}
		}

		// Token: 0x17001087 RID: 4231
		// (get) Token: 0x06004377 RID: 17271 RVA: 0x00115EA4 File Offset: 0x00114EA4
		// (set) Token: 0x06004378 RID: 17272 RVA: 0x00115ECF File Offset: 0x00114ECF
		private DetailsViewMode Mode
		{
			get
			{
				if (!this._modeSet || base.DesignMode)
				{
					this._mode = this.DefaultMode;
					this._modeSet = true;
				}
				return this._mode;
			}
			set
			{
				if (value < DetailsViewMode.ReadOnly || value > DetailsViewMode.Insert)
				{
					throw new ArgumentOutOfRangeException("value");
				}
				this._modeSet = true;
				if (this._mode != value)
				{
					this._mode = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x17001088 RID: 4232
		// (get) Token: 0x06004379 RID: 17273 RVA: 0x00115F0A File Offset: 0x00114F0A
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public virtual int PageCount
		{
			get
			{
				return this._pageCount;
			}
		}

		// Token: 0x17001089 RID: 4233
		// (get) Token: 0x0600437A RID: 17274 RVA: 0x00115F12 File Offset: 0x00114F12
		// (set) Token: 0x0600437B RID: 17275 RVA: 0x00115F1C File Offset: 0x00114F1C
		private int PageIndexInternal
		{
			get
			{
				return this._pageIndex;
			}
			set
			{
				int pageIndexInternal = this.PageIndexInternal;
				if (value != pageIndexInternal)
				{
					this._pageIndex = value;
					if (base.Initialized)
					{
						base.RequiresDataBinding = true;
					}
				}
			}
		}

		// Token: 0x1700108A RID: 4234
		// (get) Token: 0x0600437C RID: 17276 RVA: 0x00115F4A File Offset: 0x00114F4A
		// (set) Token: 0x0600437D RID: 17277 RVA: 0x00115F65 File Offset: 0x00114F65
		[WebSysDescription("DetailsView_PageIndex")]
		[Bindable(true)]
		[DefaultValue(0)]
		[WebCategory("Data")]
		public virtual int PageIndex
		{
			get
			{
				if (this.Mode == DetailsViewMode.Insert && !base.DesignMode)
				{
					return -1;
				}
				return this.PageIndexInternal;
			}
			set
			{
				if (value < -1)
				{
					throw new ArgumentOutOfRangeException("value");
				}
				if (value >= 0)
				{
					this.PageIndexInternal = value;
				}
			}
		}

		// Token: 0x1700108B RID: 4235
		// (get) Token: 0x0600437E RID: 17278 RVA: 0x00115F84 File Offset: 0x00114F84
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[WebCategory("Paging")]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("DetailsView_PagerSettings")]
		public virtual PagerSettings PagerSettings
		{
			get
			{
				if (this._pagerSettings == null)
				{
					this._pagerSettings = new PagerSettings();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._pagerSettings).TrackViewState();
					}
					this._pagerSettings.PropertyChanged += this.OnPagerPropertyChanged;
				}
				return this._pagerSettings;
			}
		}

		// Token: 0x1700108C RID: 4236
		// (get) Token: 0x0600437F RID: 17279 RVA: 0x00115FD4 File Offset: 0x00114FD4
		[WebCategory("Styles")]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[NotifyParentProperty(true)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("WebControl_PagerStyle")]
		public TableItemStyle PagerStyle
		{
			get
			{
				if (this._pagerStyle == null)
				{
					this._pagerStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._pagerStyle).TrackViewState();
					}
				}
				return this._pagerStyle;
			}
		}

		// Token: 0x1700108D RID: 4237
		// (get) Token: 0x06004380 RID: 17280 RVA: 0x00116002 File Offset: 0x00115002
		// (set) Token: 0x06004381 RID: 17281 RVA: 0x0011600A File Offset: 0x0011500A
		[TemplateContainer(typeof(DetailsView))]
		[Browsable(false)]
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("View_PagerTemplate")]
		public virtual ITemplate PagerTemplate
		{
			get
			{
				return this._pagerTemplate;
			}
			set
			{
				this._pagerTemplate = value;
			}
		}

		// Token: 0x1700108E RID: 4238
		// (get) Token: 0x06004382 RID: 17282 RVA: 0x00116014 File Offset: 0x00115014
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[WebSysDescription("DetailsView_Rows")]
		public virtual DetailsViewRowCollection Rows
		{
			get
			{
				if (this._rowsCollection == null)
				{
					if (this._rowsArray == null)
					{
						this.EnsureChildControls();
					}
					if (this._rowsArray == null)
					{
						this._rowsArray = new ArrayList();
					}
					this._rowsCollection = new DetailsViewRowCollection(this._rowsArray);
				}
				return this._rowsCollection;
			}
		}

		// Token: 0x1700108F RID: 4239
		// (get) Token: 0x06004383 RID: 17283 RVA: 0x00116061 File Offset: 0x00115061
		// (set) Token: 0x06004384 RID: 17284 RVA: 0x00116069 File Offset: 0x00115069
		[Browsable(false)]
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		public IAutoFieldGenerator RowsGenerator
		{
			get
			{
				return this._rowsGenerator;
			}
			set
			{
				this._rowsGenerator = value;
			}
		}

		// Token: 0x17001090 RID: 4240
		// (get) Token: 0x06004385 RID: 17285 RVA: 0x00116072 File Offset: 0x00115072
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
		[WebCategory("Styles")]
		[DefaultValue(null)]
		[PersistenceMode(PersistenceMode.InnerProperty)]
		[WebSysDescription("View_RowStyle")]
		[NotifyParentProperty(true)]
		public TableItemStyle RowStyle
		{
			get
			{
				if (this._rowStyle == null)
				{
					this._rowStyle = new TableItemStyle();
					if (base.IsTrackingViewState)
					{
						((IStateManager)this._rowStyle).TrackViewState();
					}
				}
				return this._rowStyle;
			}
		}

		// Token: 0x17001091 RID: 4241
		// (get) Token: 0x06004386 RID: 17286 RVA: 0x001160A0 File Offset: 0x001150A0
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public object SelectedValue
		{
			get
			{
				return this.DataKey.Value;
			}
		}

		// Token: 0x17001092 RID: 4242
		// (get) Token: 0x06004387 RID: 17287 RVA: 0x001160AD File Offset: 0x001150AD
		protected override HtmlTextWriterTag TagKey
		{
			get
			{
				if (!this.EnablePagingCallbacks)
				{
					return HtmlTextWriterTag.Table;
				}
				return HtmlTextWriterTag.Div;
			}
		}

		// Token: 0x17001093 RID: 4243
		// (get) Token: 0x06004388 RID: 17288 RVA: 0x001160BC File Offset: 0x001150BC
		[DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]
		[Browsable(false)]
		public virtual DetailsViewRow TopPagerRow
		{
			get
			{
				if (this._topPagerRow == null)
				{
					this.EnsureChildControls();
				}
				return this._topPagerRow;
			}
		}

		// Token: 0x140000A5 RID: 165
		// (add) Token: 0x06004389 RID: 17289 RVA: 0x001160D2 File Offset: 0x001150D2
		// (remove) Token: 0x0600438A RID: 17290 RVA: 0x001160E5 File Offset: 0x001150E5
		[WebCategory("Action")]
		[WebSysDescription("DetailsView_OnItemCommand")]
		public event DetailsViewCommandEventHandler ItemCommand
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemCommand, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemCommand, value);
			}
		}

		// Token: 0x140000A6 RID: 166
		// (add) Token: 0x0600438B RID: 17291 RVA: 0x001160F8 File Offset: 0x001150F8
		// (remove) Token: 0x0600438C RID: 17292 RVA: 0x0011610B File Offset: 0x0011510B
		[WebSysDescription("DetailsView_OnItemCreated")]
		[WebCategory("Behavior")]
		public event EventHandler ItemCreated
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemCreated, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemCreated, value);
			}
		}

		// Token: 0x140000A7 RID: 167
		// (add) Token: 0x0600438D RID: 17293 RVA: 0x0011611E File Offset: 0x0011511E
		// (remove) Token: 0x0600438E RID: 17294 RVA: 0x00116131 File Offset: 0x00115131
		[WebCategory("Action")]
		[WebSysDescription("DataControls_OnItemDeleted")]
		public event DetailsViewDeletedEventHandler ItemDeleted
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemDeleted, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemDeleted, value);
			}
		}

		// Token: 0x140000A8 RID: 168
		// (add) Token: 0x0600438F RID: 17295 RVA: 0x00116144 File Offset: 0x00115144
		// (remove) Token: 0x06004390 RID: 17296 RVA: 0x00116157 File Offset: 0x00115157
		[WebCategory("Action")]
		[WebSysDescription("DataControls_OnItemDeleting")]
		public event DetailsViewDeleteEventHandler ItemDeleting
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemDeleting, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemDeleting, value);
			}
		}

		// Token: 0x140000A9 RID: 169
		// (add) Token: 0x06004391 RID: 17297 RVA: 0x0011616A File Offset: 0x0011516A
		// (remove) Token: 0x06004392 RID: 17298 RVA: 0x0011617D File Offset: 0x0011517D
		[WebSysDescription("DataControls_OnItemInserted")]
		[WebCategory("Action")]
		public event DetailsViewInsertedEventHandler ItemInserted
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemInserted, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemInserted, value);
			}
		}

		// Token: 0x140000AA RID: 170
		// (add) Token: 0x06004393 RID: 17299 RVA: 0x00116190 File Offset: 0x00115190
		// (remove) Token: 0x06004394 RID: 17300 RVA: 0x001161A3 File Offset: 0x001151A3
		[WebCategory("Action")]
		[WebSysDescription("DataControls_OnItemInserting")]
		public event DetailsViewInsertEventHandler ItemInserting
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemInserting, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemInserting, value);
			}
		}

		// Token: 0x140000AB RID: 171
		// (add) Token: 0x06004395 RID: 17301 RVA: 0x001161B6 File Offset: 0x001151B6
		// (remove) Token: 0x06004396 RID: 17302 RVA: 0x001161C9 File Offset: 0x001151C9
		[WebCategory("Action")]
		[WebSysDescription("DataControls_OnItemUpdated")]
		public event DetailsViewUpdatedEventHandler ItemUpdated
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemUpdated, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemUpdated, value);
			}
		}

		// Token: 0x140000AC RID: 172
		// (add) Token: 0x06004397 RID: 17303 RVA: 0x001161DC File Offset: 0x001151DC
		// (remove) Token: 0x06004398 RID: 17304 RVA: 0x001161EF File Offset: 0x001151EF
		[WebSysDescription("DataControls_OnItemUpdating")]
		[WebCategory("Action")]
		public event DetailsViewUpdateEventHandler ItemUpdating
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventItemUpdating, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventItemUpdating, value);
			}
		}

		// Token: 0x140000AD RID: 173
		// (add) Token: 0x06004399 RID: 17305 RVA: 0x00116202 File Offset: 0x00115202
		// (remove) Token: 0x0600439A RID: 17306 RVA: 0x00116215 File Offset: 0x00115215
		[WebCategory("Action")]
		[WebSysDescription("DetailsView_OnModeChanged")]
		public event EventHandler ModeChanged
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventModeChanged, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventModeChanged, value);
			}
		}

		// Token: 0x140000AE RID: 174
		// (add) Token: 0x0600439B RID: 17307 RVA: 0x00116228 File Offset: 0x00115228
		// (remove) Token: 0x0600439C RID: 17308 RVA: 0x0011623B File Offset: 0x0011523B
		[WebSysDescription("DetailsView_OnModeChanging")]
		[WebCategory("Action")]
		public event DetailsViewModeEventHandler ModeChanging
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventModeChanging, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventModeChanging, value);
			}
		}

		// Token: 0x140000AF RID: 175
		// (add) Token: 0x0600439D RID: 17309 RVA: 0x0011624E File Offset: 0x0011524E
		// (remove) Token: 0x0600439E RID: 17310 RVA: 0x00116261 File Offset: 0x00115261
		[WebCategory("Action")]
		[WebSysDescription("DetailsView_OnPageIndexChanged")]
		public event EventHandler PageIndexChanged
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventPageIndexChanged, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventPageIndexChanged, value);
			}
		}

		// Token: 0x140000B0 RID: 176
		// (add) Token: 0x0600439F RID: 17311 RVA: 0x00116274 File Offset: 0x00115274
		// (remove) Token: 0x060043A0 RID: 17312 RVA: 0x00116287 File Offset: 0x00115287
		[WebCategory("Action")]
		[WebSysDescription("DetailsView_OnPageIndexChanging")]
		public event DetailsViewPageEventHandler PageIndexChanging
		{
			add
			{
				base.Events.AddHandler(DetailsView.EventPageIndexChanging, value);
			}
			remove
			{
				base.Events.RemoveHandler(DetailsView.EventPageIndexChanging, value);
			}
		}

		// Token: 0x060043A1 RID: 17313 RVA: 0x0011629A File Offset: 0x0011529A
		private string BuildCallbackArgument(int pageIndex)
		{
			return "\"" + Convert.ToString(pageIndex, CultureInfo.InvariantCulture) + "|\"";
		}

		// Token: 0x060043A2 RID: 17314 RVA: 0x001162B6 File Offset: 0x001152B6
		public void ChangeMode(DetailsViewMode newMode)
		{
			this.Mode = newMode;
		}

		// Token: 0x060043A3 RID: 17315 RVA: 0x001162C0 File Offset: 0x001152C0
		protected virtual AutoGeneratedField CreateAutoGeneratedRow(AutoGeneratedFieldProperties fieldProperties)
		{
			AutoGeneratedField autoGeneratedField = new AutoGeneratedField(fieldProperties.DataField);
			string name = fieldProperties.Name;
			((IStateManager)autoGeneratedField).TrackViewState();
			autoGeneratedField.HeaderText = name;
			autoGeneratedField.SortExpression = name;
			autoGeneratedField.ReadOnly = fieldProperties.IsReadOnly;
			autoGeneratedField.DataType = fieldProperties.Type;
			return autoGeneratedField;
		}

		// Token: 0x060043A4 RID: 17316 RVA: 0x00116310 File Offset: 0x00115310
		protected virtual ICollection CreateAutoGeneratedRows(object dataItem)
		{
			if (dataItem == null)
			{
				return null;
			}
			ArrayList arrayList = new ArrayList();
			PropertyDescriptorCollection propertyDescriptorCollection = null;
			bool flag = true;
			Type type = null;
			this._autoGenFieldProps = new ArrayList();
			if (dataItem != null)
			{
				type = dataItem.GetType();
			}
			if (dataItem != null && dataItem is ICustomTypeDescriptor)
			{
				propertyDescriptorCollection = TypeDescriptor.GetProperties(dataItem);
			}
			else if (type != null)
			{
				if (this.IsBindableType(type))
				{
					AutoGeneratedFieldProperties autoGeneratedFieldProperties = new AutoGeneratedFieldProperties();
					((IStateManager)autoGeneratedFieldProperties).TrackViewState();
					autoGeneratedFieldProperties.Name = "Item";
					autoGeneratedFieldProperties.DataField = BoundField.ThisExpression;
					autoGeneratedFieldProperties.Type = type;
					AutoGeneratedField autoGeneratedField = this.CreateAutoGeneratedRow(autoGeneratedFieldProperties);
					if (autoGeneratedField != null)
					{
						arrayList.Add(autoGeneratedField);
						this._autoGenFieldProps.Add(autoGeneratedFieldProperties);
					}
				}
				else
				{
					propertyDescriptorCollection = TypeDescriptor.GetProperties(type);
				}
			}
			if (propertyDescriptorCollection != null && propertyDescriptorCollection.Count != 0)
			{
				string[] dataKeyNamesInternal = this.DataKeyNamesInternal;
				int num = dataKeyNamesInternal.Length;
				string[] array = new string[num];
				for (int i = 0; i < num; i++)
				{
					array[i] = dataKeyNamesInternal[i].ToLowerInvariant();
				}
				foreach (object obj in propertyDescriptorCollection)
				{
					PropertyDescriptor propertyDescriptor = (PropertyDescriptor)obj;
					Type propertyType = propertyDescriptor.PropertyType;
					if (this.IsBindableType(propertyType))
					{
						string name = propertyDescriptor.Name;
						bool flag2 = ((IList)array).Contains(name.ToLowerInvariant());
						AutoGeneratedFieldProperties autoGeneratedFieldProperties2 = new AutoGeneratedFieldProperties();
						((IStateManager)autoGeneratedFieldProperties2).TrackViewState();
						autoGeneratedFieldProperties2.Name = name;
						autoGeneratedFieldProperties2.IsReadOnly = flag2;
						autoGeneratedFieldProperties2.Type = propertyType;
						autoGeneratedFieldProperties2.DataField = name;
						AutoGeneratedField autoGeneratedField2 = this.CreateAutoGeneratedRow(autoGeneratedFieldProperties2);
						if (autoGeneratedField2 != null)
						{
							arrayList.Add(autoGeneratedField2);
							this._autoGenFieldProps.Add(autoGeneratedFieldProperties2);
						}
					}
				}
			}
			if (arrayList.Count == 0 && flag)
			{
				throw new HttpException(SR.GetString("DetailsView_NoAutoGenFields", new object[] { this.ID }));
			}
			return arrayList;
		}

		// Token: 0x060043A5 RID: 17317 RVA: 0x00116508 File Offset: 0x00115508
		protected override int CreateChildControls(IEnumerable dataSource, bool dataBinding)
		{
			PagedDataSource pagedDataSource = null;
			int num = this.PageIndex;
			bool allowPaging = this.AllowPaging;
			int num2 = 0;
			DetailsViewMode mode = this.Mode;
			if (base.DesignMode && mode == DetailsViewMode.Insert)
			{
				num = -1;
			}
			if (dataBinding)
			{
				DataSourceView data = this.GetData();
				DataSourceSelectArguments selectArguments = base.SelectArguments;
				if (data == null)
				{
					throw new HttpException(SR.GetString("DataBoundControl_NullView", new object[] { this.ID }));
				}
				if (mode != DetailsViewMode.Insert)
				{
					if (allowPaging && !data.CanPage && dataSource != null && !(dataSource is ICollection))
					{
						selectArguments.StartRowIndex = num;
						selectArguments.MaximumRows = 1;
						data.Select(selectArguments, new DataSourceViewSelectCallback(this.SelectCallback));
					}
					if (this._useServerPaging)
					{
						if (data.CanRetrieveTotalRowCount)
						{
							pagedDataSource = this.CreateServerPagedDataSource(selectArguments.TotalRowCount);
						}
						else
						{
							ICollection collection = dataSource as ICollection;
							if (collection == null)
							{
								throw new HttpException(SR.GetString("DataBoundControl_NeedICollectionOrTotalRowCount", new object[] { base.GetType().Name }));
							}
							pagedDataSource = this.CreateServerPagedDataSource(checked(this.PageIndex + collection.Count));
						}
					}
					else
					{
						pagedDataSource = this.CreatePagedDataSource();
					}
				}
			}
			else
			{
				pagedDataSource = this.CreatePagedDataSource();
			}
			if (mode != DetailsViewMode.Insert)
			{
				pagedDataSource.DataSource = dataSource;
			}
			IEnumerator enumerator = null;
			OrderedDictionary keyTable = this.KeyTable;
			this._rowsArray = new ArrayList();
			this._rowsCollection = null;
			if (!dataBinding)
			{
				enumerator = dataSource.GetEnumerator();
				ICollection collection2 = dataSource as ICollection;
				if (collection2 == null)
				{
					throw new HttpException(SR.GetString("DataControls_DataSourceMustBeCollectionWhenNotDataBinding"));
				}
				num2 = collection2.Count;
			}
			else
			{
				keyTable.Clear();
				if (dataSource != null)
				{
					if (mode != DetailsViewMode.Insert)
					{
						ICollection collection3 = dataSource as ICollection;
						if (collection3 == null && pagedDataSource.IsPagingEnabled && !pagedDataSource.IsServerPagingEnabled)
						{
							throw new HttpException(SR.GetString("DetailsView_DataSourceMustBeCollection", new object[] { this.ID }));
						}
						if (pagedDataSource.IsPagingEnabled)
						{
							num2 = pagedDataSource.DataSourceCount;
						}
						else if (collection3 != null)
						{
							num2 = collection3.Count;
						}
					}
					enumerator = dataSource.GetEnumerator();
				}
			}
			Table table = this.CreateTable();
			TableRowCollection rows = table.Rows;
			bool flag = false;
			object obj = null;
			this.Controls.Add(table);
			if (enumerator != null)
			{
				flag = enumerator.MoveNext();
			}
			if (!flag && mode != DetailsViewMode.Insert)
			{
				if (num >= 0 || this.AutoGenerateRows)
				{
					if (this.EmptyDataText.Length > 0 || this._emptyDataTemplate != null)
					{
						this._rowsArray.Add(this.CreateRow(0, DataControlRowType.EmptyDataRow, DataControlRowState.Normal, null, rows, null));
					}
					num2 = 0;
				}
			}
			else
			{
				int i = 0;
				if (!this._useServerPaging)
				{
					while (i < num)
					{
						obj = enumerator.Current;
						flag = enumerator.MoveNext();
						if (!flag)
						{
							this._pageIndex = i;
							pagedDataSource.CurrentPageIndex = i;
							num = i;
							break;
						}
						i++;
					}
				}
				if (flag)
				{
					this._dataItem = enumerator.Current;
				}
				else
				{
					this._dataItem = obj;
				}
				if ((!this._useServerPaging && !(dataSource is ICollection)) || (this._useServerPaging && num2 < 0))
				{
					num2 = i;
					while (flag)
					{
						num2++;
						flag = enumerator.MoveNext();
					}
				}
				this._dataItemIndex = i;
				bool flag2 = num2 <= 1 && !this._useServerPaging;
				if (allowPaging && this.PagerSettings.Visible && this._pagerSettings.IsPagerOnTop && !flag2 && mode != DetailsViewMode.Insert)
				{
					this._topPagerRow = this.CreateRow(-1, DataControlRowType.Pager, DataControlRowState.Normal, null, rows, pagedDataSource);
				}
				this._headerRow = this.CreateRow(-1, DataControlRowType.Header, DataControlRowState.Normal, null, rows, null);
				if (this._headerTemplate == null && this.HeaderText.Length == 0)
				{
					this._headerRow.Visible = false;
				}
				this._rowsArray.AddRange(this.CreateDataRows(dataBinding, rows, this._dataItem));
				if (num >= 0)
				{
					string[] dataKeyNamesInternal = this.DataKeyNamesInternal;
					if (dataBinding && dataKeyNamesInternal.Length != 0)
					{
						foreach (string text in dataKeyNamesInternal)
						{
							object propertyValue = DataBinder.GetPropertyValue(this._dataItem, text);
							keyTable.Add(text, propertyValue);
						}
						this._dataKey = new DataKey(keyTable);
					}
				}
				this._footerRow = this.CreateRow(-1, DataControlRowType.Footer, DataControlRowState.Normal, null, rows, null);
				if (this._footerTemplate == null && this.FooterText.Length == 0)
				{
					this._footerRow.Visible = false;
				}
				if (allowPaging && this.PagerSettings.Visible && this._pagerSettings.IsPagerOnBottom && !flag2 && mode != DetailsViewMode.Insert)
				{
					this._bottomPagerRow = this.CreateRow(-1, DataControlRowType.Pager, DataControlRowState.Normal, null, rows, pagedDataSource);
				}
			}
			this._pageCount = num2;
			this.OnItemCreated(EventArgs.Empty);
			if (dataBinding)
			{
				this.DataBind(false);
			}
			return num2;
		}

		// Token: 0x060043A6 RID: 17318 RVA: 0x001169A0 File Offset: 0x001159A0
		protected override Style CreateControlStyle()
		{
			return new TableStyle
			{
				GridLines = GridLines.Both,
				CellSpacing = 0
			};
		}

		// Token: 0x060043A7 RID: 17319 RVA: 0x001169C4 File Offset: 0x001159C4
		private ICollection CreateDataRows(bool dataBinding, TableRowCollection rows, object dataItem)
		{
			ArrayList arrayList = new ArrayList();
			arrayList.AddRange(this.CreateDataRowsFromFields(dataItem, dataBinding, rows));
			return arrayList;
		}

		// Token: 0x060043A8 RID: 17320 RVA: 0x001169E8 File Offset: 0x001159E8
		private ICollection CreateDataRowsFromFields(object dataItem, bool dataBinding, TableRowCollection rows)
		{
			int num = 0;
			ICollection collection = this.CreateFieldSet(dataItem, dataBinding);
			ArrayList arrayList = new ArrayList();
			if (collection != null)
			{
				num = collection.Count;
			}
			if (num > 0)
			{
				DataControlRowType dataControlRowType = DataControlRowType.DataRow;
				DataControlRowState dataControlRowState = DataControlRowState.Normal;
				int num2 = 0;
				DetailsViewMode mode = this.Mode;
				if (mode == DetailsViewMode.Edit)
				{
					dataControlRowState |= DataControlRowState.Edit;
				}
				else if (mode == DetailsViewMode.Insert)
				{
					dataControlRowState |= DataControlRowState.Insert;
				}
				bool flag = false;
				foreach (object obj in collection)
				{
					DataControlField dataControlField = (DataControlField)obj;
					if (dataControlField.Initialize(false, this))
					{
						flag = true;
					}
					if (this.DetermineRenderClientScript())
					{
						dataControlField.ValidateSupportsCallback();
					}
					DataControlRowState dataControlRowState2 = dataControlRowState;
					if (num2 % 2 != 0)
					{
						dataControlRowState2 |= DataControlRowState.Alternate;
					}
					arrayList.Add(this.CreateRow(num2, dataControlRowType, dataControlRowState2, dataControlField, rows, null));
					num2++;
				}
				if (flag)
				{
					base.RequiresDataBinding = true;
				}
			}
			return arrayList;
		}

		// Token: 0x060043A9 RID: 17321 RVA: 0x00116AE0 File Offset: 0x00115AE0
		protected override DataSourceSelectArguments CreateDataSourceSelectArguments()
		{
			DataSourceSelectArguments dataSourceSelectArguments = new DataSourceSelectArguments();
			DataSourceView data = this.GetData();
			this._useServerPaging = this.AllowPaging && data.CanPage;
			if (this._useServerPaging)
			{
				dataSourceSelectArguments.StartRowIndex = this.PageIndex;
				if (data.CanRetrieveTotalRowCount)
				{
					dataSourceSelectArguments.RetrieveTotalRowCount = true;
					dataSourceSelectArguments.MaximumRows = 1;
				}
				else
				{
					dataSourceSelectArguments.MaximumRows = -1;
				}
			}
			return dataSourceSelectArguments;
		}

		// Token: 0x060043AA RID: 17322 RVA: 0x00116B48 File Offset: 0x00115B48
		protected virtual ICollection CreateFieldSet(object dataItem, bool useDataSource)
		{
			ArrayList arrayList = new ArrayList();
			if (this.AutoGenerateRows)
			{
				if (this.RowsGenerator == null)
				{
					object[] array = null;
					if (useDataSource)
					{
						ICollection collection = this.CreateAutoGeneratedRows(dataItem);
						if (collection != null)
						{
							array = new DataControlField[collection.Count];
							collection.CopyTo(array, 0);
						}
					}
					else if (this._autoGenFieldProps != null)
					{
						int count = this._autoGenFieldProps.Count;
						array = new DataControlField[count];
						for (int i = 0; i < count; i++)
						{
							array[i] = this.CreateAutoGeneratedRow((AutoGeneratedFieldProperties)this._autoGenFieldProps[i]);
						}
					}
					if (array != null)
					{
						int num = array.Length;
						for (int j = 0; j < num; j++)
						{
							arrayList.Add(array[j]);
						}
					}
				}
				else
				{
					arrayList.AddRange(this.RowsGenerator.GenerateFields(this));
				}
			}
			foreach (object obj in this.Fields)
			{
				DataControlField dataControlField = (DataControlField)obj;
				arrayList.Add(dataControlField);
			}
			if (this.AutoGenerateInsertButton || this.AutoGenerateDeleteButton || this.AutoGenerateEditButton)
			{
				CommandField commandField = new CommandField();
				commandField.ButtonType = ButtonType.Link;
				if (this.AutoGenerateInsertButton)
				{
					commandField.ShowInsertButton = true;
				}
				if (this.AutoGenerateDeleteButton)
				{
					commandField.ShowDeleteButton = true;
				}
				if (this.AutoGenerateEditButton)
				{
					commandField.ShowEditButton = true;
				}
				arrayList.Add(commandField);
			}
			return arrayList;
		}

		// Token: 0x060043AB RID: 17323 RVA: 0x00116CD0 File Offset: 0x00115CD0
		private void CreateNextPrevPager(TableRow row, PagedDataSource pagedDataSource, bool addFirstLastPageButtons)
		{
			PagerSettings pagerSettings = this.PagerSettings;
			string previousPageImageUrl = pagerSettings.PreviousPageImageUrl;
			string nextPageImageUrl = pagerSettings.NextPageImageUrl;
			bool isFirstPage = pagedDataSource.IsFirstPage;
			bool isLastPage = pagedDataSource.IsLastPage;
			if (addFirstLastPageButtons && !isFirstPage)
			{
				string firstPageImageUrl = pagerSettings.FirstPageImageUrl;
				TableCell tableCell = new TableCell();
				row.Cells.Add(tableCell);
				IButtonControl buttonControl;
				if (firstPageImageUrl.Length > 0)
				{
					buttonControl = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl).ImageUrl = firstPageImageUrl;
					((DataControlImageButton)buttonControl).AlternateText = HttpUtility.HtmlDecode(pagerSettings.FirstPageText);
					((DataControlImageButton)buttonControl).EnableCallback(this.BuildCallbackArgument(0));
				}
				else
				{
					buttonControl = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl).Text = pagerSettings.FirstPageText;
					((DataControlPagerLinkButton)buttonControl).EnableCallback(this.BuildCallbackArgument(0));
				}
				buttonControl.CommandName = "Page";
				buttonControl.CommandArgument = "First";
				tableCell.Controls.Add((Control)buttonControl);
			}
			if (!isFirstPage)
			{
				TableCell tableCell2 = new TableCell();
				row.Cells.Add(tableCell2);
				IButtonControl buttonControl2;
				if (previousPageImageUrl.Length > 0)
				{
					buttonControl2 = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl2).ImageUrl = previousPageImageUrl;
					((DataControlImageButton)buttonControl2).AlternateText = HttpUtility.HtmlDecode(pagerSettings.PreviousPageText);
					((DataControlImageButton)buttonControl2).EnableCallback(this.BuildCallbackArgument(this.PageIndex - 1));
				}
				else
				{
					buttonControl2 = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl2).Text = pagerSettings.PreviousPageText;
					((DataControlPagerLinkButton)buttonControl2).EnableCallback(this.BuildCallbackArgument(this.PageIndex - 1));
				}
				buttonControl2.CommandName = "Page";
				buttonControl2.CommandArgument = "Prev";
				tableCell2.Controls.Add((Control)buttonControl2);
			}
			if (!isLastPage)
			{
				TableCell tableCell3 = new TableCell();
				row.Cells.Add(tableCell3);
				IButtonControl buttonControl3;
				if (nextPageImageUrl.Length > 0)
				{
					buttonControl3 = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl3).ImageUrl = nextPageImageUrl;
					((DataControlImageButton)buttonControl3).AlternateText = HttpUtility.HtmlDecode(pagerSettings.NextPageText);
					((DataControlImageButton)buttonControl3).EnableCallback(this.BuildCallbackArgument(this.PageIndex + 1));
				}
				else
				{
					buttonControl3 = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl3).Text = pagerSettings.NextPageText;
					((DataControlPagerLinkButton)buttonControl3).EnableCallback(this.BuildCallbackArgument(this.PageIndex + 1));
				}
				buttonControl3.CommandName = "Page";
				buttonControl3.CommandArgument = "Next";
				tableCell3.Controls.Add((Control)buttonControl3);
			}
			if (addFirstLastPageButtons && !isLastPage)
			{
				string lastPageImageUrl = pagerSettings.LastPageImageUrl;
				TableCell tableCell4 = new TableCell();
				row.Cells.Add(tableCell4);
				IButtonControl buttonControl4;
				if (lastPageImageUrl.Length > 0)
				{
					buttonControl4 = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl4).ImageUrl = lastPageImageUrl;
					((DataControlImageButton)buttonControl4).AlternateText = HttpUtility.HtmlDecode(pagerSettings.LastPageText);
					((DataControlImageButton)buttonControl4).EnableCallback(this.BuildCallbackArgument(pagedDataSource.PageCount - 1));
				}
				else
				{
					buttonControl4 = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl4).Text = pagerSettings.LastPageText;
					((DataControlPagerLinkButton)buttonControl4).EnableCallback(this.BuildCallbackArgument(pagedDataSource.PageCount - 1));
				}
				buttonControl4.CommandName = "Page";
				buttonControl4.CommandArgument = "Last";
				tableCell4.Controls.Add((Control)buttonControl4);
			}
		}

		// Token: 0x060043AC RID: 17324 RVA: 0x00117044 File Offset: 0x00116044
		private void CreateNumericPager(TableRow row, PagedDataSource pagedDataSource, bool addFirstLastPageButtons)
		{
			PagerSettings pagerSettings = this.PagerSettings;
			int pageCount = pagedDataSource.PageCount;
			int num = pagedDataSource.CurrentPageIndex + 1;
			int pageButtonCount = pagerSettings.PageButtonCount;
			int num2 = pageButtonCount;
			int num3 = this.FirstDisplayedPageIndex + 1;
			if (pageCount < num2)
			{
				num2 = pageCount;
			}
			int num4 = 1;
			int num5 = num2;
			if (num > num5)
			{
				int num6 = (num - 1) / pageButtonCount;
				bool flag = num - num3 >= 0 && num - num3 < pageButtonCount;
				if (num3 > 0 && flag)
				{
					num4 = num3;
				}
				else
				{
					num4 = num6 * pageButtonCount + 1;
				}
				num5 = num4 + pageButtonCount - 1;
				if (num5 > pageCount)
				{
					num5 = pageCount;
				}
				if (num5 - num4 + 1 < pageButtonCount)
				{
					num4 = Math.Max(1, num5 - pageButtonCount + 1);
				}
				this.FirstDisplayedPageIndex = num4 - 1;
			}
			if (addFirstLastPageButtons && num != 1 && num4 != 1)
			{
				string firstPageImageUrl = pagerSettings.FirstPageImageUrl;
				TableCell tableCell = new TableCell();
				row.Cells.Add(tableCell);
				IButtonControl buttonControl;
				if (firstPageImageUrl.Length > 0)
				{
					buttonControl = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl).ImageUrl = firstPageImageUrl;
					((DataControlImageButton)buttonControl).AlternateText = HttpUtility.HtmlDecode(pagerSettings.FirstPageText);
					((DataControlImageButton)buttonControl).EnableCallback(this.BuildCallbackArgument(0));
				}
				else
				{
					buttonControl = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl).Text = pagerSettings.FirstPageText;
					((DataControlPagerLinkButton)buttonControl).EnableCallback(this.BuildCallbackArgument(0));
				}
				buttonControl.CommandName = "Page";
				buttonControl.CommandArgument = "First";
				tableCell.Controls.Add((Control)buttonControl);
			}
			if (num4 != 1)
			{
				TableCell tableCell2 = new TableCell();
				row.Cells.Add(tableCell2);
				LinkButton linkButton = new DataControlPagerLinkButton(this);
				linkButton.Text = "...";
				linkButton.CommandName = "Page";
				linkButton.CommandArgument = (num4 - 1).ToString(NumberFormatInfo.InvariantInfo);
				((DataControlPagerLinkButton)linkButton).EnableCallback(this.BuildCallbackArgument(num4 - 2));
				tableCell2.Controls.Add(linkButton);
			}
			for (int i = num4; i <= num5; i++)
			{
				TableCell tableCell3 = new TableCell();
				row.Cells.Add(tableCell3);
				string text = i.ToString(NumberFormatInfo.InvariantInfo);
				if (i == num)
				{
					Label label = new Label();
					label.Text = text;
					tableCell3.Controls.Add(label);
				}
				else
				{
					LinkButton linkButton = new DataControlPagerLinkButton(this);
					linkButton.Text = text;
					linkButton.CommandName = "Page";
					linkButton.CommandArgument = text;
					((DataControlPagerLinkButton)linkButton).EnableCallback(this.BuildCallbackArgument(i - 1));
					tableCell3.Controls.Add(linkButton);
				}
			}
			if (pageCount > num5)
			{
				TableCell tableCell4 = new TableCell();
				row.Cells.Add(tableCell4);
				LinkButton linkButton = new DataControlPagerLinkButton(this);
				linkButton.Text = "...";
				linkButton.CommandName = "Page";
				linkButton.CommandArgument = (num5 + 1).ToString(NumberFormatInfo.InvariantInfo);
				((DataControlPagerLinkButton)linkButton).EnableCallback(this.BuildCallbackArgument(num5));
				tableCell4.Controls.Add(linkButton);
			}
			bool flag2 = num5 == pageCount;
			if (addFirstLastPageButtons && num != pageCount && !flag2)
			{
				string lastPageImageUrl = pagerSettings.LastPageImageUrl;
				TableCell tableCell5 = new TableCell();
				row.Cells.Add(tableCell5);
				IButtonControl buttonControl2;
				if (lastPageImageUrl.Length > 0)
				{
					buttonControl2 = new DataControlImageButton(this);
					((DataControlImageButton)buttonControl2).ImageUrl = lastPageImageUrl;
					((DataControlImageButton)buttonControl2).AlternateText = HttpUtility.HtmlDecode(pagerSettings.LastPageText);
					((DataControlImageButton)buttonControl2).EnableCallback(this.BuildCallbackArgument(pagedDataSource.PageCount - 1));
				}
				else
				{
					buttonControl2 = new DataControlPagerLinkButton(this);
					((DataControlPagerLinkButton)buttonControl2).Text = pagerSettings.LastPageText;
					((DataControlPagerLinkButton)buttonControl2).EnableCallback(this.BuildCallbackArgument(pagedDataSource.PageCount - 1));
				}
				buttonControl2.CommandName = "Page";
				buttonControl2.CommandArgument = "Last";
				tableCell5.Controls.Add((Control)buttonControl2);
			}
		}

		// Token: 0x060043AD RID: 17325 RVA: 0x0011744C File Offset: 0x0011644C
		private PagedDataSource CreatePagedDataSource()
		{
			return new PagedDataSource
			{
				CurrentPageIndex = this.PageIndex,
				PageSize = 1,
				AllowPaging = this.AllowPaging,
				AllowCustomPaging = false,
				AllowServerPaging = false,
				VirtualCount = 0
			};
		}

		// Token: 0x060043AE RID: 17326 RVA: 0x00117494 File Offset: 0x00116494
		private PagedDataSource CreateServerPagedDataSource(int totalRowCount)
		{
			return new PagedDataSource
			{
				CurrentPageIndex = this.PageIndex,
				PageSize = 1,
				AllowPaging = this.AllowPaging,
				AllowCustomPaging = false,
				AllowServerPaging = true,
				VirtualCount = totalRowCount
			};
		}

		// Token: 0x060043AF RID: 17327 RVA: 0x001174DC File Offset: 0x001164DC
		private DetailsViewRow CreateRow(int rowIndex, DataControlRowType rowType, DataControlRowState rowState, DataControlField field, TableRowCollection rows, PagedDataSource pagedDataSource)
		{
			DetailsViewRow detailsViewRow = this.CreateRow(rowIndex, rowType, rowState);
			rows.Add(detailsViewRow);
			if (rowType != DataControlRowType.Pager)
			{
				this.InitializeRow(detailsViewRow, field);
			}
			else
			{
				this.InitializePager(detailsViewRow, pagedDataSource);
			}
			return detailsViewRow;
		}

		// Token: 0x060043B0 RID: 17328 RVA: 0x00117515 File Offset: 0x00116515
		protected virtual DetailsViewRow CreateRow(int rowIndex, DataControlRowType rowType, DataControlRowState rowState)
		{
			if (rowType == DataControlRowType.Pager)
			{
				return new DetailsViewPagerRow(rowIndex, rowType, rowState);
			}
			return new DetailsViewRow(rowIndex, rowType, rowState);
		}

		// Token: 0x060043B1 RID: 17329 RVA: 0x0011752C File Offset: 0x0011652C
		protected virtual Table CreateTable()
		{
			return new ChildTable(string.IsNullOrEmpty(this.ID) ? null : this.ClientID);
		}

		// Token: 0x060043B2 RID: 17330 RVA: 0x00117549 File Offset: 0x00116549
		public sealed override void DataBind()
		{
			base.DataBind();
		}

		// Token: 0x060043B3 RID: 17331 RVA: 0x00117551 File Offset: 0x00116551
		public virtual void DeleteItem()
		{
			this.HandleDelete(string.Empty);
		}

		// Token: 0x060043B4 RID: 17332 RVA: 0x00117560 File Offset: 0x00116560
		private bool DetermineRenderClientScript()
		{
			if (!this._renderClientScriptValid)
			{
				this._renderClientScript = false;
				if (this.EnablePagingCallbacks && this.Context != null && this.Page != null && this.Page.RequestInternal != null && this.Page.Request.Browser.SupportsCallback && !base.IsParentedToUpdatePanel)
				{
					HttpBrowserCapabilities browser = this.Page.Request.Browser;
					bool flag = browser.EcmaScriptVersion.Major > 0;
					bool flag2 = browser.W3CDomVersion.Major > 0;
					bool flag3 = !StringUtil.EqualsIgnoreCase(browser["tagwriter"], typeof(Html32TextWriter).FullName);
					this._renderClientScript = flag && flag2 && flag3;
				}
				this._renderClientScriptValid = true;
			}
			return this._renderClientScript;
		}

		// Token: 0x060043B5 RID: 17333 RVA: 0x00117640 File Offset: 0x00116640
		protected override void EnsureDataBound()
		{
			if (base.RequiresDataBinding && this.Mode == DetailsViewMode.Insert && !this.AutoGenerateRows)
			{
				this.OnDataBinding(EventArgs.Empty);
				base.RequiresDataBinding = false;
				base.MarkAsDataBound();
				if (this._adapter != null)
				{
					DataBoundControlAdapter dataBoundControlAdapter = this._adapter as DataBoundControlAdapter;
					if (dataBoundControlAdapter != null)
					{
						dataBoundControlAdapter.PerformDataBinding(null);
					}
					else
					{
						this.PerformDataBinding(null);
					}
				}
				else
				{
					this.PerformDataBinding(null);
				}
				this.OnDataBound(EventArgs.Empty);
				return;
			}
			base.EnsureDataBound();
		}

		// Token: 0x060043B6 RID: 17334 RVA: 0x001176C0 File Offset: 0x001166C0
		protected virtual void ExtractRowValues(IOrderedDictionary fieldValues, bool includeReadOnlyFields, bool includeKeys)
		{
			if (fieldValues == null)
			{
				return;
			}
			ICollection collection = this.CreateFieldSet(null, false);
			object[] array = new object[collection.Count];
			collection.CopyTo(array, 0);
			DetailsViewRowCollection rows = this.Rows;
			string[] dataKeyNamesInternal = this.DataKeyNamesInternal;
			int num = 0;
			while (num < array.Length && num < rows.Count)
			{
				int num2 = 0;
				if (((DataControlField)array[num]).ShowHeader)
				{
					num2 = 1;
				}
				if (((DataControlField)array[num]).Visible)
				{
					OrderedDictionary orderedDictionary = new OrderedDictionary();
					((DataControlField)array[num]).ExtractValuesFromCell(orderedDictionary, rows[num].Cells[num2] as DataControlFieldCell, rows[num].RowState, includeReadOnlyFields);
					foreach (object obj in orderedDictionary)
					{
						DictionaryEntry dictionaryEntry = (DictionaryEntry)obj;
						if (includeKeys || Array.IndexOf(dataKeyNamesInternal, dictionaryEntry.Key) == -1)
						{
							fieldValues[dictionaryEntry.Key] = dictionaryEntry.Value;
						}
					}
				}
				num++;
			}
		}

		// Token: 0x060043B7 RID: 17335 RVA: 0x001177F4 File Offset: 0x001167F4
		protected virtual string GetCallbackResult()
		{
			StringWriter stringWriter = new StringWriter(CultureInfo.InvariantCulture);
			HtmlTextWriter htmlTextWriter = new HtmlTextWriter(stringWriter);
			IStateFormatter stateFormatter = this.Page.CreateStateFormatter();
			this.RenderTableContents(htmlTextWriter);
			htmlTextWriter.Flush();
			htmlTextWriter.Close();
			object obj = OrderedDictionaryStateHelper.SaveViewState(this.KeyTable);
			string text = stateFormatter.Serialize(obj);
			return string.Concat(new string[]
			{
				Convert.ToString(this.PageIndex, CultureInfo.InvariantCulture),
				"|",
				text,
				"|",
				stringWriter.ToString()
			});
		}

		// Token: 0x060043B8 RID: 17336 RVA: 0x0011788C File Offset: 0x0011688C
		protected virtual string GetCallbackScript(IButtonControl buttonControl, string argument)
		{
			if (this.DetermineRenderClientScript() && !string.IsNullOrEmpty(argument))
			{
				if (this.Page != null)
				{
					this.Page.ClientScript.RegisterForEventValidation(this.UniqueID, argument);
				}
				string text = "javascript:__dv" + this.ClientID + ".callback";
				return text + "(" + argument + "); return false;";
			}
			return null;
		}

		// Token: 0x060043B9 RID: 17337 RVA: 0x001178F4 File Offset: 0x001168F4
		private void HandleCancel()
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewModeEventArgs detailsViewModeEventArgs = new DetailsViewModeEventArgs(this.DefaultMode, true);
			this.OnModeChanging(detailsViewModeEventArgs);
			if (detailsViewModeEventArgs.Cancel)
			{
				return;
			}
			if (isBoundUsingDataSourceID)
			{
				this.Mode = detailsViewModeEventArgs.NewMode;
				this.OnModeChanged(EventArgs.Empty);
			}
			base.RequiresDataBinding = true;
		}

		// Token: 0x060043BA RID: 17338 RVA: 0x00117948 File Offset: 0x00116948
		private void HandleDelete(string commandArg)
		{
			int pageIndex = this.PageIndex;
			if (pageIndex < 0)
			{
				return;
			}
			DataSourceView dataSourceView = null;
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			if (isBoundUsingDataSourceID)
			{
				dataSourceView = this.GetData();
				if (dataSourceView == null)
				{
					throw new HttpException(SR.GetString("View_DataSourceReturnedNullView", new object[] { this.ID }));
				}
			}
			DetailsViewDeleteEventArgs detailsViewDeleteEventArgs = new DetailsViewDeleteEventArgs(pageIndex);
			if (isBoundUsingDataSourceID)
			{
				this.ExtractRowValues(detailsViewDeleteEventArgs.Values, true, false);
				foreach (object obj in this.DataKey.Values)
				{
					DictionaryEntry dictionaryEntry = (DictionaryEntry)obj;
					detailsViewDeleteEventArgs.Keys.Add(dictionaryEntry.Key, dictionaryEntry.Value);
					if (detailsViewDeleteEventArgs.Values.Contains(dictionaryEntry.Key))
					{
						detailsViewDeleteEventArgs.Values.Remove(dictionaryEntry.Key);
					}
				}
			}
			this.OnItemDeleting(detailsViewDeleteEventArgs);
			if (detailsViewDeleteEventArgs.Cancel)
			{
				return;
			}
			if (isBoundUsingDataSourceID)
			{
				this._deleteKeys = detailsViewDeleteEventArgs.Keys;
				this._deleteValues = detailsViewDeleteEventArgs.Values;
				dataSourceView.Delete(detailsViewDeleteEventArgs.Keys, detailsViewDeleteEventArgs.Values, new DataSourceViewOperationCallback(this.HandleDeleteCallback));
			}
		}

		// Token: 0x060043BB RID: 17339 RVA: 0x00117A90 File Offset: 0x00116A90
		private bool HandleDeleteCallback(int affectedRows, Exception ex)
		{
			int pageIndex = this.PageIndex;
			DetailsViewDeletedEventArgs detailsViewDeletedEventArgs = new DetailsViewDeletedEventArgs(affectedRows, ex);
			detailsViewDeletedEventArgs.SetKeys(this._deleteKeys);
			detailsViewDeletedEventArgs.SetValues(this._deleteValues);
			this.OnItemDeleted(detailsViewDeletedEventArgs);
			this._deleteKeys = null;
			this._deleteValues = null;
			if (ex != null && !detailsViewDeletedEventArgs.ExceptionHandled && this.PageIsValidAfterModelException())
			{
				return false;
			}
			if (pageIndex == this._pageCount - 1)
			{
				this.HandlePage(pageIndex - 1);
			}
			base.RequiresDataBinding = true;
			return true;
		}

		// Token: 0x060043BC RID: 17340 RVA: 0x00117B0C File Offset: 0x00116B0C
		private void HandleEdit()
		{
			if (this.PageIndex < 0)
			{
				return;
			}
			DetailsViewModeEventArgs detailsViewModeEventArgs = new DetailsViewModeEventArgs(DetailsViewMode.Edit, false);
			this.OnModeChanging(detailsViewModeEventArgs);
			if (detailsViewModeEventArgs.Cancel)
			{
				return;
			}
			if (base.IsBoundUsingDataSourceID)
			{
				this.Mode = detailsViewModeEventArgs.NewMode;
				this.OnModeChanged(EventArgs.Empty);
			}
			base.RequiresDataBinding = true;
		}

		// Token: 0x060043BD RID: 17341 RVA: 0x00117B64 File Offset: 0x00116B64
		private bool HandleEvent(EventArgs e, bool causesValidation, string validationGroup)
		{
			bool flag = false;
			this._modelValidationGroup = null;
			if (causesValidation && this.Page != null)
			{
				this.Page.Validate(validationGroup);
				if (this.EnableModelValidation)
				{
					this._modelValidationGroup = validationGroup;
				}
			}
			DetailsViewCommandEventArgs detailsViewCommandEventArgs = e as DetailsViewCommandEventArgs;
			if (detailsViewCommandEventArgs != null)
			{
				this.OnItemCommand(detailsViewCommandEventArgs);
				flag = true;
				string commandName = detailsViewCommandEventArgs.CommandName;
				int num = this.PageIndex;
				if (StringUtil.EqualsIgnoreCase(commandName, "Page"))
				{
					string text = (string)detailsViewCommandEventArgs.CommandArgument;
					if (StringUtil.EqualsIgnoreCase(text, "Next"))
					{
						num++;
					}
					else if (StringUtil.EqualsIgnoreCase(text, "Prev"))
					{
						num--;
					}
					else if (StringUtil.EqualsIgnoreCase(text, "First"))
					{
						num = 0;
					}
					else if (StringUtil.EqualsIgnoreCase(text, "Last"))
					{
						num = this.PageCount - 1;
					}
					else
					{
						num = Convert.ToInt32(text, CultureInfo.InvariantCulture) - 1;
					}
					this.HandlePage(num);
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "Edit"))
				{
					this.HandleEdit();
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "Update"))
				{
					this.HandleUpdate((string)detailsViewCommandEventArgs.CommandArgument, causesValidation);
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "Cancel"))
				{
					this.HandleCancel();
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "Delete"))
				{
					this.HandleDelete((string)detailsViewCommandEventArgs.CommandArgument);
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "Insert"))
				{
					this.HandleInsert((string)detailsViewCommandEventArgs.CommandArgument, causesValidation);
				}
				else if (StringUtil.EqualsIgnoreCase(commandName, "New"))
				{
					this.HandleNew();
				}
			}
			return flag;
		}

		// Token: 0x060043BE RID: 17342 RVA: 0x00117CF0 File Offset: 0x00116CF0
		private void HandleInsert(string commandArg, bool causesValidation)
		{
			if (causesValidation && this.Page != null && !this.Page.IsValid)
			{
				return;
			}
			if (this.Mode != DetailsViewMode.Insert)
			{
				throw new HttpException(SR.GetString("DetailsViewFormView_ControlMustBeInInsertMode", new object[] { "DetailsView", this.ID }));
			}
			DataSourceView dataSourceView = null;
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			if (isBoundUsingDataSourceID)
			{
				dataSourceView = this.GetData();
				if (dataSourceView == null)
				{
					throw new HttpException(SR.GetString("View_DataSourceReturnedNullView", new object[] { this.ID }));
				}
			}
			DetailsViewInsertEventArgs detailsViewInsertEventArgs = new DetailsViewInsertEventArgs(commandArg);
			if (isBoundUsingDataSourceID)
			{
				this.ExtractRowValues(detailsViewInsertEventArgs.Values, false, true);
			}
			this.OnItemInserting(detailsViewInsertEventArgs);
			if (detailsViewInsertEventArgs.Cancel)
			{
				return;
			}
			if (isBoundUsingDataSourceID)
			{
				this._insertValues = detailsViewInsertEventArgs.Values;
				dataSourceView.Insert(detailsViewInsertEventArgs.Values, new DataSourceViewOperationCallback(this.HandleInsertCallback));
			}
		}

		// Token: 0x060043BF RID: 17343 RVA: 0x00117DD4 File Offset: 0x00116DD4
		private bool HandleInsertCallback(int affectedRows, Exception ex)
		{
			DetailsViewInsertedEventArgs detailsViewInsertedEventArgs = new DetailsViewInsertedEventArgs(affectedRows, ex);
			detailsViewInsertedEventArgs.SetValues(this._insertValues);
			this.OnItemInserted(detailsViewInsertedEventArgs);
			this._insertValues = null;
			if (ex != null && !detailsViewInsertedEventArgs.ExceptionHandled)
			{
				if (this.PageIsValidAfterModelException())
				{
					return false;
				}
				detailsViewInsertedEventArgs.KeepInInsertMode = true;
			}
			if (!detailsViewInsertedEventArgs.KeepInInsertMode)
			{
				DetailsViewModeEventArgs detailsViewModeEventArgs = new DetailsViewModeEventArgs(this.DefaultMode, false);
				this.OnModeChanging(detailsViewModeEventArgs);
				if (!detailsViewModeEventArgs.Cancel)
				{
					this.Mode = detailsViewModeEventArgs.NewMode;
					this.OnModeChanged(EventArgs.Empty);
					base.RequiresDataBinding = true;
				}
			}
			return true;
		}

		// Token: 0x060043C0 RID: 17344 RVA: 0x00117E64 File Offset: 0x00116E64
		private void HandleNew()
		{
			DetailsViewModeEventArgs detailsViewModeEventArgs = new DetailsViewModeEventArgs(DetailsViewMode.Insert, false);
			this.OnModeChanging(detailsViewModeEventArgs);
			if (detailsViewModeEventArgs.Cancel)
			{
				return;
			}
			if (base.IsBoundUsingDataSourceID)
			{
				this.Mode = detailsViewModeEventArgs.NewMode;
				this.OnModeChanged(EventArgs.Empty);
			}
			base.RequiresDataBinding = true;
		}

		// Token: 0x060043C1 RID: 17345 RVA: 0x00117EB0 File Offset: 0x00116EB0
		private void HandlePage(int newPage)
		{
			if (!this.AllowPaging)
			{
				return;
			}
			if (this.PageIndex < 0)
			{
				return;
			}
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewPageEventArgs detailsViewPageEventArgs = new DetailsViewPageEventArgs(newPage);
			this.OnPageIndexChanging(detailsViewPageEventArgs);
			if (detailsViewPageEventArgs.Cancel)
			{
				return;
			}
			if (isBoundUsingDataSourceID)
			{
				if (detailsViewPageEventArgs.NewPageIndex <= -1)
				{
					return;
				}
				if (detailsViewPageEventArgs.NewPageIndex >= this.PageCount && this._pageIndex == this.PageCount - 1)
				{
					return;
				}
				this._keyTable = null;
				this._pageIndex = detailsViewPageEventArgs.NewPageIndex;
			}
			this.OnPageIndexChanged(EventArgs.Empty);
			base.RequiresDataBinding = true;
		}

		// Token: 0x060043C2 RID: 17346 RVA: 0x00117F44 File Offset: 0x00116F44
		private void HandleUpdate(string commandArg, bool causesValidation)
		{
			if (causesValidation && this.Page != null && !this.Page.IsValid)
			{
				return;
			}
			if (this.Mode != DetailsViewMode.Edit)
			{
				throw new HttpException(SR.GetString("DetailsViewFormView_ControlMustBeInEditMode", new object[] { "DetailsView", this.ID }));
			}
			if (this.PageIndex < 0)
			{
				return;
			}
			DataSourceView dataSourceView = null;
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			if (isBoundUsingDataSourceID)
			{
				dataSourceView = this.GetData();
				if (dataSourceView == null)
				{
					throw new HttpException(SR.GetString("View_DataSourceReturnedNullView", new object[] { this.ID }));
				}
			}
			DetailsViewUpdateEventArgs detailsViewUpdateEventArgs = new DetailsViewUpdateEventArgs(commandArg);
			if (isBoundUsingDataSourceID)
			{
				foreach (object obj in this.BoundFieldValues)
				{
					DictionaryEntry dictionaryEntry = (DictionaryEntry)obj;
					detailsViewUpdateEventArgs.OldValues.Add(dictionaryEntry.Key, dictionaryEntry.Value);
				}
				this.ExtractRowValues(detailsViewUpdateEventArgs.NewValues, false, true);
				foreach (object obj2 in this.DataKey.Values)
				{
					DictionaryEntry dictionaryEntry2 = (DictionaryEntry)obj2;
					detailsViewUpdateEventArgs.Keys.Add(dictionaryEntry2.Key, dictionaryEntry2.Value);
				}
			}
			this.OnItemUpdating(detailsViewUpdateEventArgs);
			if (detailsViewUpdateEventArgs.Cancel)
			{
				return;
			}
			if (isBoundUsingDataSourceID)
			{
				this._updateKeys = detailsViewUpdateEventArgs.Keys;
				this._updateNewValues = detailsViewUpdateEventArgs.NewValues;
				this._updateOldValues = detailsViewUpdateEventArgs.OldValues;
				dataSourceView.Update(detailsViewUpdateEventArgs.Keys, detailsViewUpdateEventArgs.NewValues, detailsViewUpdateEventArgs.OldValues, new DataSourceViewOperationCallback(this.HandleUpdateCallback));
			}
		}

		// Token: 0x060043C3 RID: 17347 RVA: 0x00118128 File Offset: 0x00117128
		private bool HandleUpdateCallback(int affectedRows, Exception ex)
		{
			DetailsViewUpdatedEventArgs detailsViewUpdatedEventArgs = new DetailsViewUpdatedEventArgs(affectedRows, ex);
			detailsViewUpdatedEventArgs.SetOldValues(this._updateOldValues);
			detailsViewUpdatedEventArgs.SetNewValues(this._updateNewValues);
			detailsViewUpdatedEventArgs.SetKeys(this._updateKeys);
			this.OnItemUpdated(detailsViewUpdatedEventArgs);
			this._updateKeys = null;
			this._updateOldValues = null;
			this._updateNewValues = null;
			if (ex != null && !detailsViewUpdatedEventArgs.ExceptionHandled)
			{
				if (this.PageIsValidAfterModelException())
				{
					return false;
				}
				detailsViewUpdatedEventArgs.KeepInEditMode = true;
			}
			if (!detailsViewUpdatedEventArgs.KeepInEditMode)
			{
				DetailsViewModeEventArgs detailsViewModeEventArgs = new DetailsViewModeEventArgs(this.DefaultMode, false);
				this.OnModeChanging(detailsViewModeEventArgs);
				if (!detailsViewModeEventArgs.Cancel)
				{
					this.Mode = detailsViewModeEventArgs.NewMode;
					this.OnModeChanged(EventArgs.Empty);
					base.RequiresDataBinding = true;
				}
			}
			return true;
		}

		// Token: 0x060043C4 RID: 17348 RVA: 0x001181DC File Offset: 0x001171DC
		protected virtual void InitializePager(DetailsViewRow row, PagedDataSource pagedDataSource)
		{
			TableCell tableCell = new TableCell();
			PagerSettings pagerSettings = this.PagerSettings;
			if (this._pagerTemplate != null)
			{
				this._pagerTemplate.InstantiateIn(tableCell);
			}
			else
			{
				PagerTable pagerTable = new PagerTable();
				TableRow tableRow = new TableRow();
				tableCell.Controls.Add(pagerTable);
				pagerTable.Rows.Add(tableRow);
				switch (pagerSettings.Mode)
				{
				case PagerButtons.NextPrevious:
					this.CreateNextPrevPager(tableRow, pagedDataSource, false);
					break;
				case PagerButtons.Numeric:
					this.CreateNumericPager(tableRow, pagedDataSource, false);
					break;
				case PagerButtons.NextPreviousFirstLast:
					this.CreateNextPrevPager(tableRow, pagedDataSource, true);
					break;
				case PagerButtons.NumericFirstLast:
					this.CreateNumericPager(tableRow, pagedDataSource, true);
					break;
				}
			}
			tableCell.ColumnSpan = 2;
			row.Cells.Add(tableCell);
		}

		// Token: 0x060043C5 RID: 17349 RVA: 0x00118290 File Offset: 0x00117290
		protected virtual void InitializeRow(DetailsViewRow row, DataControlField field)
		{
			TableCellCollection cells = row.Cells;
			DataControlFieldCell dataControlFieldCell = new DataControlFieldCell(field);
			ITemplate template = null;
			int dataItemIndex = this.DataItemIndex;
			DataControlRowState rowState = row.RowState;
			switch (row.RowType)
			{
			case DataControlRowType.Header:
			{
				template = this._headerTemplate;
				dataControlFieldCell.ColumnSpan = 2;
				string headerText = this.HeaderText;
				if (this._headerTemplate == null && headerText.Length > 0)
				{
					dataControlFieldCell.Text = headerText;
				}
				break;
			}
			case DataControlRowType.Footer:
			{
				template = this._footerTemplate;
				dataControlFieldCell.ColumnSpan = 2;
				string footerText = this.FooterText;
				if (this._footerTemplate == null && footerText.Length > 0)
				{
					dataControlFieldCell.Text = footerText;
				}
				break;
			}
			case DataControlRowType.DataRow:
				if (field.ShowHeader)
				{
					DataControlFieldCell dataControlFieldCell2 = new DataControlFieldCell(field);
					field.InitializeCell(dataControlFieldCell2, DataControlCellType.Header, rowState, dataItemIndex);
					cells.Add(dataControlFieldCell2);
				}
				else
				{
					dataControlFieldCell.ColumnSpan = 2;
				}
				field.InitializeCell(dataControlFieldCell, DataControlCellType.DataCell, rowState, dataItemIndex);
				break;
			case DataControlRowType.EmptyDataRow:
			{
				template = this._emptyDataTemplate;
				string emptyDataText = this.EmptyDataText;
				if (this._emptyDataTemplate == null && emptyDataText.Length > 0)
				{
					dataControlFieldCell.Text = emptyDataText;
				}
				break;
			}
			}
			if (template != null)
			{
				template.InstantiateIn(dataControlFieldCell);
			}
			cells.Add(dataControlFieldCell);
		}

		// Token: 0x060043C6 RID: 17350 RVA: 0x001183C5 File Offset: 0x001173C5
		public virtual void InsertItem(bool causesValidation)
		{
			this.HandleInsert(string.Empty, causesValidation);
		}

		// Token: 0x060043C7 RID: 17351 RVA: 0x001183D3 File Offset: 0x001173D3
		public virtual bool IsBindableType(Type type)
		{
			return DataBoundControlHelper.IsBindableType(type);
		}

		// Token: 0x060043C8 RID: 17352 RVA: 0x001183DC File Offset: 0x001173DC
		protected internal override void LoadControlState(object savedState)
		{
			this._pageIndex = 0;
			this._defaultMode = DetailsViewMode.ReadOnly;
			this._dataKeyNames = new string[0];
			this._pageCount = 0;
			object[] array = savedState as object[];
			if (array != null)
			{
				base.LoadControlState(array[0]);
				if (array[1] != null)
				{
					this._pageIndex = (int)array[1];
				}
				if (array[2] != null)
				{
					this._defaultMode = (DetailsViewMode)array[2];
				}
				if (array[3] != null)
				{
					this.Mode = (DetailsViewMode)array[3];
				}
				if (array[4] != null)
				{
					this._dataKeyNames = (string[])array[4];
				}
				if (array[5] != null)
				{
					this.KeyTable.Clear();
					OrderedDictionaryStateHelper.LoadViewState(this.KeyTable, (ArrayList)array[5]);
				}
				if (array[6] != null)
				{
					this._pageCount = (int)array[6];
					return;
				}
			}
			else
			{
				base.LoadControlState(null);
			}
		}

		// Token: 0x060043C9 RID: 17353 RVA: 0x001184AC File Offset: 0x001174AC
		private bool LoadHiddenFieldState(string pageIndex, string dataKey)
		{
			bool flag = false;
			int num = int.Parse(pageIndex, CultureInfo.InvariantCulture);
			if (this.PageIndex != num)
			{
				flag = true;
				this._pageIndex = num;
				if (!string.IsNullOrEmpty(dataKey))
				{
					IStateFormatter stateFormatter = this.Page.CreateStateFormatter();
					ArrayList arrayList = stateFormatter.Deserialize(dataKey) as ArrayList;
					if (this._keyTable != null)
					{
						this._keyTable.Clear();
					}
					OrderedDictionaryStateHelper.LoadViewState(this.KeyTable, arrayList);
				}
			}
			return flag;
		}

		// Token: 0x060043CA RID: 17354 RVA: 0x00118520 File Offset: 0x00117520
		protected override void LoadViewState(object savedState)
		{
			if (savedState != null)
			{
				object[] array = (object[])savedState;
				base.LoadViewState(array[0]);
				if (array[1] != null)
				{
					((IStateManager)this.PagerStyle).LoadViewState(array[1]);
				}
				if (array[2] != null)
				{
					((IStateManager)this.HeaderStyle).LoadViewState(array[2]);
				}
				if (array[3] != null)
				{
					((IStateManager)this.FooterStyle).LoadViewState(array[3]);
				}
				if (array[4] != null)
				{
					((IStateManager)this.RowStyle).LoadViewState(array[4]);
				}
				if (array[5] != null)
				{
					((IStateManager)this.AlternatingRowStyle).LoadViewState(array[5]);
				}
				if (array[6] != null)
				{
					((IStateManager)this.CommandRowStyle).LoadViewState(array[6]);
				}
				if (array[7] != null)
				{
					((IStateManager)this.EditRowStyle).LoadViewState(array[7]);
				}
				if (array[8] != null)
				{
					((IStateManager)this.InsertRowStyle).LoadViewState(array[8]);
				}
				if (array[9] != null)
				{
					((IStateManager)this.FieldHeaderStyle).LoadViewState(array[9]);
				}
				if (array[10] != null)
				{
					((IStateManager)this.Fields).LoadViewState(array[10]);
				}
				if (array[11] != null)
				{
					OrderedDictionaryStateHelper.LoadViewState((OrderedDictionary)this.BoundFieldValues, (ArrayList)array[11]);
				}
				if (array[12] != null)
				{
					((IStateManager)this.PagerSettings).LoadViewState(array[12]);
				}
				if (array[13] != null)
				{
					((IStateManager)base.ControlStyle).LoadViewState(array[13]);
				}
				if (array[14] != null)
				{
					object[] array2 = (object[])array[14];
					int num = array2.Length;
					this._autoGenFieldProps = new ArrayList();
					for (int i = 0; i < num; i++)
					{
						AutoGeneratedFieldProperties autoGeneratedFieldProperties = new AutoGeneratedFieldProperties();
						((IStateManager)autoGeneratedFieldProperties).TrackViewState();
						((IStateManager)autoGeneratedFieldProperties).LoadViewState(array2[i]);
						this._autoGenFieldProps.Add(autoGeneratedFieldProperties);
					}
					return;
				}
			}
			else
			{
				base.LoadViewState(null);
			}
		}

		// Token: 0x060043CB RID: 17355 RVA: 0x001186A8 File Offset: 0x001176A8
		protected override bool OnBubbleEvent(object source, EventArgs e)
		{
			bool flag = false;
			string text = string.Empty;
			DetailsViewCommandEventArgs detailsViewCommandEventArgs = e as DetailsViewCommandEventArgs;
			if (detailsViewCommandEventArgs != null)
			{
				IButtonControl buttonControl = detailsViewCommandEventArgs.CommandSource as IButtonControl;
				if (buttonControl != null)
				{
					flag = buttonControl.CausesValidation;
					text = buttonControl.ValidationGroup;
				}
			}
			return this.HandleEvent(e, flag, text);
		}

		// Token: 0x060043CC RID: 17356 RVA: 0x001186ED File Offset: 0x001176ED
		protected override void OnDataSourceViewChanged(object sender, EventArgs e)
		{
			this._keyTable = null;
			base.OnDataSourceViewChanged(sender, e);
		}

		// Token: 0x060043CD RID: 17357 RVA: 0x001186FE File Offset: 0x001176FE
		private void OnFieldsChanged(object sender, EventArgs e)
		{
			if (base.Initialized)
			{
				base.RequiresDataBinding = true;
			}
		}

		// Token: 0x060043CE RID: 17358 RVA: 0x0011870F File Offset: 0x0011770F
		protected internal override void OnInit(EventArgs e)
		{
			base.OnInit(e);
			if (this.Page != null)
			{
				if (this.DataKeyNames.Length > 0 && !this.AutoGenerateRows)
				{
					this.Page.RegisterRequiresViewStateEncryption();
				}
				this.Page.RegisterRequiresControlState(this);
			}
		}

		// Token: 0x060043CF RID: 17359 RVA: 0x0011874C File Offset: 0x0011774C
		protected virtual void OnItemCommand(DetailsViewCommandEventArgs e)
		{
			DetailsViewCommandEventHandler detailsViewCommandEventHandler = (DetailsViewCommandEventHandler)base.Events[DetailsView.EventItemCommand];
			if (detailsViewCommandEventHandler != null)
			{
				detailsViewCommandEventHandler(this, e);
			}
		}

		// Token: 0x060043D0 RID: 17360 RVA: 0x0011877C File Offset: 0x0011777C
		protected virtual void OnItemCreated(EventArgs e)
		{
			EventHandler eventHandler = (EventHandler)base.Events[DetailsView.EventItemCreated];
			if (eventHandler != null)
			{
				eventHandler(this, e);
			}
		}

		// Token: 0x060043D1 RID: 17361 RVA: 0x001187AC File Offset: 0x001177AC
		protected virtual void OnItemDeleted(DetailsViewDeletedEventArgs e)
		{
			DetailsViewDeletedEventHandler detailsViewDeletedEventHandler = (DetailsViewDeletedEventHandler)base.Events[DetailsView.EventItemDeleted];
			if (detailsViewDeletedEventHandler != null)
			{
				detailsViewDeletedEventHandler(this, e);
			}
		}

		// Token: 0x060043D2 RID: 17362 RVA: 0x001187DC File Offset: 0x001177DC
		protected virtual void OnItemDeleting(DetailsViewDeleteEventArgs e)
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewDeleteEventHandler detailsViewDeleteEventHandler = (DetailsViewDeleteEventHandler)base.Events[DetailsView.EventItemDeleting];
			if (detailsViewDeleteEventHandler != null)
			{
				detailsViewDeleteEventHandler(this, e);
				return;
			}
			if (!isBoundUsingDataSourceID && !e.Cancel)
			{
				throw new HttpException(SR.GetString("DetailsView_UnhandledEvent", new object[] { this.ID, "ItemDeleting" }));
			}
		}

		// Token: 0x060043D3 RID: 17363 RVA: 0x00118848 File Offset: 0x00117848
		protected virtual void OnItemInserted(DetailsViewInsertedEventArgs e)
		{
			DetailsViewInsertedEventHandler detailsViewInsertedEventHandler = (DetailsViewInsertedEventHandler)base.Events[DetailsView.EventItemInserted];
			if (detailsViewInsertedEventHandler != null)
			{
				detailsViewInsertedEventHandler(this, e);
			}
		}

		// Token: 0x060043D4 RID: 17364 RVA: 0x00118878 File Offset: 0x00117878
		protected virtual void OnItemInserting(DetailsViewInsertEventArgs e)
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewInsertEventHandler detailsViewInsertEventHandler = (DetailsViewInsertEventHandler)base.Events[DetailsView.EventItemInserting];
			if (detailsViewInsertEventHandler != null)
			{
				detailsViewInsertEventHandler(this, e);
				return;
			}
			if (!isBoundUsingDataSourceID && !e.Cancel)
			{
				throw new HttpException(SR.GetString("DetailsView_UnhandledEvent", new object[] { this.ID, "ItemInserting" }));
			}
		}

		// Token: 0x060043D5 RID: 17365 RVA: 0x001188E4 File Offset: 0x001178E4
		protected virtual void OnItemUpdated(DetailsViewUpdatedEventArgs e)
		{
			DetailsViewUpdatedEventHandler detailsViewUpdatedEventHandler = (DetailsViewUpdatedEventHandler)base.Events[DetailsView.EventItemUpdated];
			if (detailsViewUpdatedEventHandler != null)
			{
				detailsViewUpdatedEventHandler(this, e);
			}
		}

		// Token: 0x060043D6 RID: 17366 RVA: 0x00118914 File Offset: 0x00117914
		protected virtual void OnItemUpdating(DetailsViewUpdateEventArgs e)
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewUpdateEventHandler detailsViewUpdateEventHandler = (DetailsViewUpdateEventHandler)base.Events[DetailsView.EventItemUpdating];
			if (detailsViewUpdateEventHandler != null)
			{
				detailsViewUpdateEventHandler(this, e);
				return;
			}
			if (!isBoundUsingDataSourceID && !e.Cancel)
			{
				throw new HttpException(SR.GetString("DetailsView_UnhandledEvent", new object[] { this.ID, "ItemUpdating" }));
			}
		}

		// Token: 0x060043D7 RID: 17367 RVA: 0x00118980 File Offset: 0x00117980
		protected virtual void OnModeChanged(EventArgs e)
		{
			EventHandler eventHandler = (EventHandler)base.Events[DetailsView.EventModeChanged];
			if (eventHandler != null)
			{
				eventHandler(this, e);
			}
		}

		// Token: 0x060043D8 RID: 17368 RVA: 0x001189B0 File Offset: 0x001179B0
		protected virtual void OnModeChanging(DetailsViewModeEventArgs e)
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewModeEventHandler detailsViewModeEventHandler = (DetailsViewModeEventHandler)base.Events[DetailsView.EventModeChanging];
			if (detailsViewModeEventHandler != null)
			{
				detailsViewModeEventHandler(this, e);
				return;
			}
			if (!isBoundUsingDataSourceID && !e.Cancel)
			{
				throw new HttpException(SR.GetString("DetailsView_UnhandledEvent", new object[] { this.ID, "ModeChanging" }));
			}
		}

		// Token: 0x060043D9 RID: 17369 RVA: 0x00118A1C File Offset: 0x00117A1C
		protected virtual void OnPageIndexChanged(EventArgs e)
		{
			EventHandler eventHandler = (EventHandler)base.Events[DetailsView.EventPageIndexChanged];
			if (eventHandler != null)
			{
				eventHandler(this, e);
			}
		}

		// Token: 0x060043DA RID: 17370 RVA: 0x00118A4C File Offset: 0x00117A4C
		protected virtual void OnPageIndexChanging(DetailsViewPageEventArgs e)
		{
			bool isBoundUsingDataSourceID = base.IsBoundUsingDataSourceID;
			DetailsViewPageEventHandler detailsViewPageEventHandler = (DetailsViewPageEventHandler)base.Events[DetailsView.EventPageIndexChanging];
			if (detailsViewPageEventHandler != null)
			{
				detailsViewPageEventHandler(this, e);
				return;
			}
			if (!isBoundUsingDataSourceID && !e.Cancel)
			{
				throw new HttpException(SR.GetString("DetailsView_UnhandledEvent", new object[] { this.ID, "PageIndexChanging" }));
			}
		}

		// Token: 0x060043DB RID: 17371 RVA: 0x00118AB8 File Offset: 0x00117AB8
		protected override void OnPagePreLoad(object sender, EventArgs e)
		{
			if (this.Page != null && !this.Page.IsCallback && this.Page.RequestValueCollection != null)
			{
				string text = "__dv" + this.ClientID + "__hidden";
				string text2 = this.Page.RequestValueCollection[text];
				if (!string.IsNullOrEmpty(text2) && this.ParseHiddenFieldState(text2))
				{
					base.RequiresDataBinding = true;
				}
			}
			base.OnPagePreLoad(sender, e);
		}

		// Token: 0x060043DC RID: 17372 RVA: 0x00118B2F File Offset: 0x00117B2F
		private void OnPagerPropertyChanged(object sender, EventArgs e)
		{
			if (base.Initialized)
			{
				base.RequiresDataBinding = true;
			}
		}

		// Token: 0x060043DD RID: 17373 RVA: 0x00118B40 File Offset: 0x00117B40
		protected internal override void OnPreRender(EventArgs e)
		{
			base.OnPreRender(e);
			if (this.DetermineRenderClientScript() && this.Page != null)
			{
				string text = "__dv" + this.ClientID;
				ClientScriptManager clientScript = this.Page.ClientScript;
				clientScript.RegisterClientScriptResource(typeof(DetailsView), "DetailsView.js");
				string callbackEventReference = clientScript.GetCallbackEventReference(this, text + ".getHiddenFieldContents(arg)", "DetailsView_OnCallback", text);
				string text2 = text + "__hidden";
				clientScript.RegisterHiddenField(text2, string.Empty);
				string text3 = string.Format(CultureInfo.InvariantCulture, "\r\nvar {0} = new DetailsView();\r\n{0}.stateField = document.getElementById('{1}');\r\n{0}.panelElement = document.getElementById('{0}__div');\r\n{0}.pageIndex = {3};\r\n{0}.setStateField();\r\n{0}.callback = function(arg) {{\r\n    {2};\r\n}};", new object[] { text, text2, callbackEventReference, this.PageIndex });
				clientScript.RegisterStartupScript(typeof(DetailsView), text, text3, true);
			}
		}

		// Token: 0x060043DE RID: 17374 RVA: 0x00118C1A File Offset: 0x00117C1A
		private bool PageIsValidAfterModelException()
		{
			if (this._modelValidationGroup == null)
			{
				return true;
			}
			this.Page.Validate(this._modelValidationGroup);
			return this.Page.IsValid;
		}

		// Token: 0x060043DF RID: 17375 RVA: 0x00118C44 File Offset: 0x00117C44
		private bool ParseHiddenFieldState(string state)
		{
			string[] array = state.Split(new char[] { '|' });
			return array.Length == 2 && this.LoadHiddenFieldState(array[0], array[1]);
		}

		// Token: 0x060043E0 RID: 17376 RVA: 0x00118C79 File Offset: 0x00117C79
		protected internal override void PerformDataBinding(IEnumerable data)
		{
			base.PerformDataBinding(data);
			if (base.IsBoundUsingDataSourceID && this.Mode == DetailsViewMode.Edit && base.IsViewStateEnabled)
			{
				this.BoundFieldValues.Clear();
				this.ExtractRowValues(this.BoundFieldValues, true, false);
			}
		}

		// Token: 0x060043E1 RID: 17377 RVA: 0x00118CB4 File Offset: 0x00117CB4
		protected internal virtual void PrepareControlHierarchy()
		{
			if (this.Controls.Count < 1)
			{
				return;
			}
			Table table = (Table)this.Controls[0];
			table.CopyBaseAttributes(this);
			if (base.ControlStyleCreated && !base.ControlStyle.IsEmpty)
			{
				table.ApplyStyle(base.ControlStyle);
			}
			else
			{
				table.GridLines = GridLines.Both;
				table.CellSpacing = 0;
			}
			table.Caption = this.Caption;
			table.CaptionAlign = this.CaptionAlign;
			Style style = new TableItemStyle();
			style.CopyFrom(this._rowStyle);
			if (this._alternatingRowStyle != null)
			{
				style = new TableItemStyle();
				style.CopyFrom(this._alternatingRowStyle);
			}
			TableRowCollection rows = table.Rows;
			foreach (object obj in rows)
			{
				DetailsViewRow detailsViewRow = (DetailsViewRow)obj;
				Style style2 = new TableItemStyle();
				DataControlRowState rowState = detailsViewRow.RowState;
				DataControlRowType rowType = detailsViewRow.RowType;
				DataControlFieldCell dataControlFieldCell = detailsViewRow.Cells[0] as DataControlFieldCell;
				DataControlField dataControlField = null;
				if (dataControlFieldCell != null)
				{
					dataControlField = dataControlFieldCell.ContainingField;
				}
				switch (rowType)
				{
				case DataControlRowType.Header:
					style2 = this._headerStyle;
					break;
				case DataControlRowType.Footer:
					style2 = this._footerStyle;
					break;
				case DataControlRowType.DataRow:
					style2.CopyFrom(this._rowStyle);
					if ((rowState & DataControlRowState.Alternate) != DataControlRowState.Normal)
					{
						style2.CopyFrom(style);
					}
					if (dataControlField is ButtonFieldBase)
					{
						style2.CopyFrom(this._commandRowStyle);
					}
					else
					{
						if ((rowState & DataControlRowState.Edit) != DataControlRowState.Normal)
						{
							style2.CopyFrom(this._editRowStyle);
						}
						if ((rowState & DataControlRowState.Insert) != DataControlRowState.Normal)
						{
							if (this._insertRowStyle != null)
							{
								style2.CopyFrom(this._insertRowStyle);
							}
							else
							{
								style2.CopyFrom(this._editRowStyle);
							}
						}
					}
					break;
				case DataControlRowType.Pager:
					style2 = this._pagerStyle;
					break;
				case DataControlRowType.EmptyDataRow:
					style2 = this._emptyDataRowStyle;
					break;
				}
				if (style2 != null && detailsViewRow.Visible)
				{
					detailsViewRow.MergeStyle(style2);
				}
				if (rowType == DataControlRowType.DataRow && dataControlField != null)
				{
					if (!dataControlField.Visible || (this.Mode == DetailsViewMode.Insert && !dataControlField.InsertVisible))
					{
						detailsViewRow.Visible = false;
					}
					else
					{
						int num = 0;
						if (dataControlFieldCell != null && dataControlFieldCell.ContainingField.ShowHeader)
						{
							dataControlFieldCell.MergeStyle(dataControlField.HeaderStyleInternal);
							dataControlFieldCell.MergeStyle(this._fieldHeaderStyle);
							num = 1;
						}
						DataControlFieldCell dataControlFieldCell2 = detailsViewRow.Cells[num] as DataControlFieldCell;
						if (dataControlFieldCell2 != null)
						{
							dataControlFieldCell2.MergeStyle(dataControlField.ItemStyleInternal);
						}
						foreach (object obj2 in dataControlFieldCell2.Controls)
						{
							Control control = (Control)obj2;
							WebControl webControl = control as WebControl;
							Style controlStyleInternal = dataControlField.ControlStyleInternal;
							if (webControl != null && controlStyleInternal != null && !controlStyleInternal.IsEmpty)
							{
								webControl.ControlStyle.CopyFrom(controlStyleInternal);
							}
						}
					}
				}
			}
		}

		// Token: 0x060043E2 RID: 17378 RVA: 0x00118FE4 File Offset: 0x00117FE4
		protected virtual void RaiseCallbackEvent(string eventArgument)
		{
			string[] array = eventArgument.Split(new char[] { '|' });
			base.ValidateEvent(this.UniqueID, string.Concat(new string[]
			{
				"\"",
				array[0],
				"|",
				array[1],
				"\""
			}));
			this.LoadHiddenFieldState(array[2], array[3]);
			int num = int.Parse(array[0], CultureInfo.InvariantCulture);
			this._pageIndex = num;
			this.DataBind();
		}

		// Token: 0x060043E3 RID: 17379 RVA: 0x0011906C File Offset: 0x0011806C
		protected virtual void RaisePostBackEvent(string eventArgument)
		{
			base.ValidateEvent(this.UniqueID, eventArgument);
			int num = eventArgument.IndexOf('$');
			if (num < 0)
			{
				return;
			}
			CommandEventArgs commandEventArgs = new CommandEventArgs(eventArgument.Substring(0, num), eventArgument.Substring(num + 1));
			DetailsViewCommandEventArgs detailsViewCommandEventArgs = new DetailsViewCommandEventArgs(this, commandEventArgs);
			this.HandleEvent(detailsViewCommandEventArgs, false, string.Empty);
		}

		// Token: 0x060043E4 RID: 17380 RVA: 0x001190C1 File Offset: 0x001180C1
		protected internal override void Render(HtmlTextWriter writer)
		{
			this.Render(writer, !base.DesignMode);
		}

		// Token: 0x060043E5 RID: 17381 RVA: 0x001190D4 File Offset: 0x001180D4
		private void Render(HtmlTextWriter writer, bool renderPanel)
		{
			if (this.Page != null)
			{
				this.Page.VerifyRenderingInServerForm(this);
			}
			this.PrepareControlHierarchy();
			if (renderPanel)
			{
				if (this.DetermineRenderClientScript())
				{
					string clientID = this.ClientID;
					if (clientID == null)
					{
						throw new HttpException(SR.GetString("DetailsView_MustBeParented"));
					}
					StringBuilder stringBuilder = new StringBuilder("__dv", 9 + clientID.Length);
					stringBuilder.Append(clientID);
					stringBuilder.Append("__div");
					writer.AddAttribute(HtmlTextWriterAttribute.Id, stringBuilder.ToString(), true);
				}
				writer.RenderBeginTag(HtmlTextWriterTag.Div);
			}
			this.RenderContents(writer);
			if (renderPanel)
			{
				writer.RenderEndTag();
			}
		}

		// Token: 0x060043E6 RID: 17382 RVA: 0x0011916F File Offset: 0x0011816F
		private void RenderTableContents(HtmlTextWriter writer)
		{
			this.Render(writer, false);
		}

		// Token: 0x060043E7 RID: 17383 RVA: 0x0011917C File Offset: 0x0011817C
		protected internal override object SaveControlState()
		{
			object obj = base.SaveControlState();
			if (obj != null || this._pageIndex != 0 || this._mode != this._defaultMode || this._defaultMode != DetailsViewMode.ReadOnly || (this._dataKeyNames != null && this._dataKeyNames.Length > 0) || (this._keyTable != null && this._keyTable.Count > 0) || this._pageCount != 0)
			{
				object[] array = new object[7];
				object obj2 = null;
				object obj3 = null;
				object obj4 = null;
				object obj5 = null;
				object obj6 = null;
				object obj7 = null;
				if (this._pageIndex != 0)
				{
					obj2 = this._pageIndex;
				}
				if (this._defaultMode != DetailsViewMode.ReadOnly)
				{
					obj4 = (int)this._defaultMode;
				}
				if (this._mode != this._defaultMode && this._modeSet)
				{
					obj3 = (int)this._mode;
				}
				if (this._dataKeyNames != null && this._dataKeyNames.Length > 0)
				{
					obj5 = this._dataKeyNames;
				}
				if (this._keyTable != null)
				{
					obj6 = OrderedDictionaryStateHelper.SaveViewState(this._keyTable);
				}
				if (this._pageCount != 0)
				{
					obj7 = this._pageCount;
				}
				array[0] = obj;
				array[1] = obj2;
				array[2] = obj4;
				array[3] = obj3;
				array[4] = obj5;
				array[5] = obj6;
				array[6] = obj7;
				return array;
			}
			return true;
		}

		// Token: 0x060043E8 RID: 17384 RVA: 0x001192B4 File Offset: 0x001182B4
		protected override object SaveViewState()
		{
			object obj = base.SaveViewState();
			object obj2 = ((this._pagerStyle != null) ? ((IStateManager)this._pagerStyle).SaveViewState() : null);
			object obj3 = ((this._headerStyle != null) ? ((IStateManager)this._headerStyle).SaveViewState() : null);
			object obj4 = ((this._footerStyle != null) ? ((IStateManager)this._footerStyle).SaveViewState() : null);
			object obj5 = ((this._rowStyle != null) ? ((IStateManager)this._rowStyle).SaveViewState() : null);
			object obj6 = ((this._alternatingRowStyle != null) ? ((IStateManager)this._alternatingRowStyle).SaveViewState() : null);
			object obj7 = ((this._commandRowStyle != null) ? ((IStateManager)this._commandRowStyle).SaveViewState() : null);
			object obj8 = ((this._editRowStyle != null) ? ((IStateManager)this._editRowStyle).SaveViewState() : null);
			object obj9 = ((this._insertRowStyle != null) ? ((IStateManager)this._insertRowStyle).SaveViewState() : null);
			object obj10 = ((this._fieldHeaderStyle != null) ? ((IStateManager)this._fieldHeaderStyle).SaveViewState() : null);
			object obj11 = ((this._fieldCollection != null) ? ((IStateManager)this._fieldCollection).SaveViewState() : null);
			object obj12 = ((this._boundFieldValues != null) ? OrderedDictionaryStateHelper.SaveViewState(this._boundFieldValues) : null);
			object obj13 = ((this._pagerSettings != null) ? ((IStateManager)this._pagerSettings).SaveViewState() : null);
			object obj14 = (base.ControlStyleCreated ? ((IStateManager)base.ControlStyle).SaveViewState() : null);
			object obj15 = null;
			if (this._autoGenFieldProps != null)
			{
				int count = this._autoGenFieldProps.Count;
				object[] array = new object[count];
				for (int i = 0; i < count; i++)
				{
					array[i] = ((IStateManager)this._autoGenFieldProps[i]).SaveViewState();
				}
				obj15 = array;
			}
			return new object[]
			{
				obj, obj2, obj3, obj4, obj5, obj6, obj7, obj8, obj9, obj10,
				obj11, obj12, obj13, obj14, obj15
			};
		}

		// Token: 0x060043E9 RID: 17385 RVA: 0x001194B6 File Offset: 0x001184B6
		private void SelectCallback(IEnumerable data)
		{
			throw new HttpException(SR.GetString("DataBoundControl_DataSourceDoesntSupportPaging"));
		}

		// Token: 0x060043EA RID: 17386 RVA: 0x001194C8 File Offset: 0x001184C8
		protected override void TrackViewState()
		{
			base.TrackViewState();
			if (this._fieldCollection != null)
			{
				((IStateManager)this._fieldCollection).TrackViewState();
			}
			if (this._pagerStyle != null)
			{
				((IStateManager)this._pagerStyle).TrackViewState();
			}
			if (this._headerStyle != null)
			{
				((IStateManager)this._headerStyle).TrackViewState();
			}
			if (this._footerStyle != null)
			{
				((IStateManager)this._footerStyle).TrackViewState();
			}
			if (this._rowStyle != null)
			{
				((IStateManager)this._rowStyle).TrackViewState();
			}
			if (this._alternatingRowStyle != null)
			{
				((IStateManager)this._alternatingRowStyle).TrackViewState();
			}
			if (this._commandRowStyle != null)
			{
				((IStateManager)this._commandRowStyle).TrackViewState();
			}
			if (this._editRowStyle != null)
			{
				((IStateManager)this._editRowStyle).TrackViewState();
			}
			if (this._insertRowStyle != null)
			{
				((IStateManager)this._insertRowStyle).TrackViewState();
			}
			if (this._pagerSettings != null)
			{
				((IStateManager)this._pagerSettings).TrackViewState();
			}
			if (base.ControlStyleCreated)
			{
				((IStateManager)base.ControlStyle).TrackViewState();
			}
		}

		// Token: 0x060043EB RID: 17387 RVA: 0x001195AC File Offset: 0x001185AC
		public virtual void UpdateItem(bool causesValidation)
		{
			this.HandleUpdate(string.Empty, causesValidation);
		}

		// Token: 0x060043EC RID: 17388 RVA: 0x001195BA File Offset: 0x001185BA
		void IPostBackEventHandler.RaisePostBackEvent(string eventArgument)
		{
			this.RaisePostBackEvent(eventArgument);
		}

		// Token: 0x060043ED RID: 17389 RVA: 0x001195C4 File Offset: 0x001185C4
		PostBackOptions IPostBackContainer.GetPostBackOptions(IButtonControl buttonControl)
		{
			if (buttonControl == null)
			{
				throw new ArgumentNullException("buttonControl");
			}
			if (buttonControl.CausesValidation)
			{
				throw new InvalidOperationException(SR.GetString("CannotUseParentPostBackWhenValidating", new object[]
				{
					base.GetType().Name,
					this.ID
				}));
			}
			return new PostBackOptions(this, buttonControl.CommandName + "$" + buttonControl.CommandArgument)
			{
				RequiresJavaScriptProtocol = true
			};
		}

		// Token: 0x060043EE RID: 17390 RVA: 0x0011963B File Offset: 0x0011863B
		string ICallbackContainer.GetCallbackScript(IButtonControl buttonControl, string argument)
		{
			return this.GetCallbackScript(buttonControl, argument);
		}

		// Token: 0x060043EF RID: 17391 RVA: 0x00119645 File Offset: 0x00118645
		void ICallbackEventHandler.RaiseCallbackEvent(string eventArgument)
		{
			this.RaiseCallbackEvent(eventArgument);
		}

		// Token: 0x060043F0 RID: 17392 RVA: 0x0011964E File Offset: 0x0011864E
		string ICallbackEventHandler.GetCallbackResult()
		{
			return this.GetCallbackResult();
		}

		// Token: 0x17001094 RID: 4244
		// (get) Token: 0x060043F1 RID: 17393 RVA: 0x00119656 File Offset: 0x00118656
		int IDataItemContainer.DataItemIndex
		{
			get
			{
				return this.DataItemIndex;
			}
		}

		// Token: 0x17001095 RID: 4245
		// (get) Token: 0x060043F2 RID: 17394 RVA: 0x0011965E File Offset: 0x0011865E
		int IDataItemContainer.DisplayIndex
		{
			get
			{
				return 0;
			}
		}

		// Token: 0x04002952 RID: 10578
		private const string startupScriptFormat = "\r\nvar {0} = new DetailsView();\r\n{0}.stateField = document.getElementById('{1}');\r\n{0}.panelElement = document.getElementById('{0}__div');\r\n{0}.pageIndex = {3};\r\n{0}.setStateField();\r\n{0}.callback = function(arg) {{\r\n    {2};\r\n}};";

		// Token: 0x04002953 RID: 10579
		private static readonly object EventItemCommand = new object();

		// Token: 0x04002954 RID: 10580
		private static readonly object EventItemCreated = new object();

		// Token: 0x04002955 RID: 10581
		private static readonly object EventItemDeleted = new object();

		// Token: 0x04002956 RID: 10582
		private static readonly object EventItemDeleting = new object();

		// Token: 0x04002957 RID: 10583
		private static readonly object EventItemInserting = new object();

		// Token: 0x04002958 RID: 10584
		private static readonly object EventItemInserted = new object();

		// Token: 0x04002959 RID: 10585
		private static readonly object EventItemUpdating = new object();

		// Token: 0x0400295A RID: 10586
		private static readonly object EventItemUpdated = new object();

		// Token: 0x0400295B RID: 10587
		private static readonly object EventModeChanged = new object();

		// Token: 0x0400295C RID: 10588
		private static readonly object EventModeChanging = new object();

		// Token: 0x0400295D RID: 10589
		private static readonly object EventPageIndexChanged = new object();

		// Token: 0x0400295E RID: 10590
		private static readonly object EventPageIndexChanging = new object();

		// Token: 0x0400295F RID: 10591
		private ITemplate _headerTemplate;

		// Token: 0x04002960 RID: 10592
		private ITemplate _footerTemplate;

		// Token: 0x04002961 RID: 10593
		private ITemplate _pagerTemplate;

		// Token: 0x04002962 RID: 10594
		private ITemplate _emptyDataTemplate;

		// Token: 0x04002963 RID: 10595
		private TableItemStyle _rowStyle;

		// Token: 0x04002964 RID: 10596
		private TableItemStyle _headerStyle;

		// Token: 0x04002965 RID: 10597
		private TableItemStyle _footerStyle;

		// Token: 0x04002966 RID: 10598
		private TableItemStyle _editRowStyle;

		// Token: 0x04002967 RID: 10599
		private TableItemStyle _alternatingRowStyle;

		// Token: 0x04002968 RID: 10600
		private TableItemStyle _commandRowStyle;

		// Token: 0x04002969 RID: 10601
		private TableItemStyle _insertRowStyle;

		// Token: 0x0400296A RID: 10602
		private TableItemStyle _emptyDataRowStyle;

		// Token: 0x0400296B RID: 10603
		private TableItemStyle _fieldHeaderStyle;

		// Token: 0x0400296C RID: 10604
		private DetailsViewRow _bottomPagerRow;

		// Token: 0x0400296D RID: 10605
		private DetailsViewRow _footerRow;

		// Token: 0x0400296E RID: 10606
		private DetailsViewRow _headerRow;

		// Token: 0x0400296F RID: 10607
		private DetailsViewRow _topPagerRow;

		// Token: 0x04002970 RID: 10608
		private TableItemStyle _pagerStyle;

		// Token: 0x04002971 RID: 10609
		private PagerSettings _pagerSettings;

		// Token: 0x04002972 RID: 10610
		private ArrayList _rowsArray;

		// Token: 0x04002973 RID: 10611
		private ArrayList _autoGenFieldProps;

		// Token: 0x04002974 RID: 10612
		private DataControlFieldCollection _fieldCollection;

		// Token: 0x04002975 RID: 10613
		private DetailsViewRowCollection _rowsCollection;

		// Token: 0x04002976 RID: 10614
		private int _pageCount;

		// Token: 0x04002977 RID: 10615
		private object _dataItem;

		// Token: 0x04002978 RID: 10616
		private int _dataItemIndex;

		// Token: 0x04002979 RID: 10617
		private OrderedDictionary _boundFieldValues;

		// Token: 0x0400297A RID: 10618
		private DataKey _dataKey;

		// Token: 0x0400297B RID: 10619
		private OrderedDictionary _keyTable;

		// Token: 0x0400297C RID: 10620
		private string[] _dataKeyNames;

		// Token: 0x0400297D RID: 10621
		private int _pageIndex;

		// Token: 0x0400297E RID: 10622
		private DetailsViewMode _defaultMode;

		// Token: 0x0400297F RID: 10623
		private DetailsViewMode _mode;

		// Token: 0x04002980 RID: 10624
		private bool _modeSet;

		// Token: 0x04002981 RID: 10625
		private bool _useServerPaging;

		// Token: 0x04002982 RID: 10626
		private string _modelValidationGroup;

		// Token: 0x04002983 RID: 10627
		private bool _renderClientScript;

		// Token: 0x04002984 RID: 10628
		private bool _renderClientScriptValid;

		// Token: 0x04002985 RID: 10629
		private IAutoFieldGenerator _rowsGenerator;

		// Token: 0x04002986 RID: 10630
		private IOrderedDictionary _deleteKeys;

		// Token: 0x04002987 RID: 10631
		private IOrderedDictionary _deleteValues;

		// Token: 0x04002988 RID: 10632
		private IOrderedDictionary _insertValues;

		// Token: 0x04002989 RID: 10633
		private IOrderedDictionary _updateKeys;

		// Token: 0x0400298A RID: 10634
		private IOrderedDictionary _updateOldValues;

		// Token: 0x0400298B RID: 10635
		private IOrderedDictionary _updateNewValues;
	}
}
