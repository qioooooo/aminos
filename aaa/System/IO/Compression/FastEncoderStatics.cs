using System;

namespace System.IO.Compression
{
	// Token: 0x02000209 RID: 521
	internal static class FastEncoderStatics
	{
		// Token: 0x04000FF0 RID: 4080
		internal const int NumChars = 256;

		// Token: 0x04000FF1 RID: 4081
		internal const int NumLengthBaseCodes = 29;

		// Token: 0x04000FF2 RID: 4082
		internal const int NumDistBaseCodes = 30;

		// Token: 0x04000FF3 RID: 4083
		internal static readonly byte[] FastEncoderTreeStructureData = new byte[]
		{
			237, 189, 7, 96, 28, 73, 150, 37, 38, 47,
			109, 202, 123, 127, 74, 245, 74, 215, 224, 116,
			161, 8, 128, 96, 19, 36, 216, 144, 64, 16,
			236, 193, 136, 205, 230, 146, 236, 29, 105, 71,
			35, 41, 171, 42, 129, 202, 101, 86, 101, 93,
			102, 22, 64, 204, 237, 157, 188, 247, 222, 123,
			239, 189, 247, 222, 123, 239, 189, 247, 186, 59,
			157, 78, 39, 247, 223, byte.MaxValue, 63, 92, 102, 100,
			1, 108, 246, 206, 74, 218, 201, 158, 33, 128,
			170, 200, 31, 63, 126, 124, 31, 63
		};

		// Token: 0x04000FF4 RID: 4084
		internal static readonly uint[] FastEncoderLiteralCodeInfo = new uint[]
		{
			55278U, 317422U, 186350U, 448494U, 120814U, 382958U, 251886U, 514030U, 14318U, 51180U,
			294U, 276462U, 145390U, 407534U, 79854U, 341998U, 210926U, 473070U, 47086U, 309230U,
			178158U, 440302U, 112622U, 374766U, 243694U, 505838U, 30702U, 292846U, 161774U, 423918U,
			6125U, 96238U, 1318U, 358382U, 9194U, 116716U, 227310U, 489454U, 137197U, 25578U,
			2920U, 3817U, 23531U, 5098U, 1127U, 7016U, 3175U, 12009U, 1896U, 5992U,
			3944U, 7913U, 8040U, 16105U, 21482U, 489U, 232U, 8681U, 4585U, 4328U,
			12777U, 13290U, 2280U, 63470U, 325614U, 6376U, 2537U, 1256U, 10729U, 5352U,
			6633U, 29674U, 56299U, 3304U, 15339U, 194542U, 14825U, 3050U, 1513U, 19434U,
			9705U, 10220U, 5609U, 13801U, 3561U, 11242U, 75756U, 48107U, 456686U, 129006U,
			42988U, 31723U, 391150U, 64491U, 260078U, 522222U, 4078U, 806U, 615U, 2663U,
			1639U, 1830U, 7400U, 744U, 3687U, 166U, 108524U, 11753U, 1190U, 359U,
			2407U, 678U, 1383U, 71661U, 1702U, 422U, 1446U, 3431U, 4840U, 2792U,
			7657U, 6888U, 2027U, 202733U, 26604U, 38893U, 169965U, 266222U, 135150U, 397294U,
			69614U, 331758U, 200686U, 462830U, 36846U, 298990U, 167918U, 430062U, 102382U, 364526U,
			233454U, 495598U, 20462U, 282606U, 151534U, 413678U, 85998U, 348142U, 217070U, 479214U,
			53230U, 315374U, 184302U, 446446U, 118766U, 380910U, 249838U, 511982U, 12270U, 274414U,
			143342U, 405486U, 77806U, 339950U, 208878U, 471022U, 45038U, 307182U, 176110U, 438254U,
			110574U, 372718U, 241646U, 503790U, 28654U, 290798U, 159726U, 421870U, 94190U, 356334U,
			225262U, 487406U, 61422U, 323566U, 192494U, 454638U, 126958U, 389102U, 258030U, 520174U,
			8174U, 270318U, 139246U, 401390U, 73710U, 335854U, 204782U, 466926U, 40942U, 303086U,
			172014U, 434158U, 106478U, 368622U, 237550U, 499694U, 24558U, 286702U, 155630U, 417774U,
			90094U, 352238U, 221166U, 483310U, 57326U, 319470U, 188398U, 450542U, 122862U, 385006U,
			253934U, 516078U, 16366U, 278510U, 147438U, 409582U, 81902U, 344046U, 212974U, 475118U,
			49134U, 311278U, 180206U, 442350U, 114670U, 376814U, 245742U, 507886U, 32750U, 294894U,
			163822U, 425966U, 98286U, 104429U, 235501U, 22509U, 360430U, 153581U, 229358U, 88045U,
			491502U, 219117U, 65518U, 327662U, 196590U, 458734U, 131054U, 132U, 3U, 388U,
			68U, 324U, 197U, 709U, 453U, 966U, 1990U, 38U, 1062U, 935U,
			2983U, 1959U, 4007U, 551U, 1575U, 2599U, 3623U, 104U, 2152U, 4200U,
			6248U, 873U, 4969U, 9065U, 13161U, 1770U, 9962U, 18154U, 26346U, 5867U,
			14059U, 22251U, 30443U, 38635U, 46827U, 55019U, 63211U, 15852U, 32236U, 48620U,
			65004U, 81388U, 97772U, 114156U, 130540U, 27629U, 60397U, 93165U, 125933U, 158701U,
			191469U, 224237U, 257005U, 1004U, 17388U, 33772U, 50156U, 66540U, 82924U, 99308U,
			115692U, 7150U, 39918U, 72686U, 105454U, 138222U, 170990U, 203758U, 236526U, 269294U,
			302062U, 334830U, 367598U, 400366U, 433134U, 465902U, 498670U, 92144U, 223216U, 354288U,
			485360U, 616432U, 747504U, 878576U, 1009648U, 1140720U, 1271792U, 1402864U, 1533936U, 1665008U,
			1796080U, 1927152U, 2058224U, 34799U, 100335U, 165871U, 231407U, 296943U, 362479U, 428015U,
			493551U, 559087U, 624623U, 690159U, 755695U, 821231U, 886767U, 952303U, 1017839U, 59376U,
			190448U, 321520U, 452592U, 583664U, 714736U, 845808U, 976880U, 1107952U, 1239024U, 1370096U,
			1501168U, 1632240U, 1763312U, 1894384U, 2025456U, 393203U, 917491U, 1441779U, 1966067U, 2490355U,
			3014643U, 3538931U, 4063219U, 4587507U, 5111795U, 5636083U, 6160371U, 6684659U, 7208947U, 7733235U,
			8257523U, 8781811U, 9306099U, 9830387U, 10354675U, 10878963U, 11403251U, 11927539U, 12451827U, 12976115U,
			13500403U, 14024691U, 14548979U, 15073267U, 15597555U, 16121843U, 16646131U, 262131U, 786419U, 1310707U,
			1834995U, 2359283U, 2883571U, 3407859U, 3932147U, 4456435U, 4980723U, 5505011U, 6029299U, 6553587U,
			7077875U, 7602163U, 8126451U, 8650739U, 9175027U, 9699315U, 10223603U, 10747891U, 11272179U, 11796467U,
			12320755U, 12845043U, 13369331U, 13893619U, 14417907U, 14942195U, 15466483U, 15990771U, 16515059U, 524275U,
			1048563U, 1572851U, 2097139U, 2621427U, 3145715U, 3670003U, 4194291U, 4718579U, 5242867U, 5767155U,
			6291443U, 6815731U, 7340019U, 7864307U, 8388595U, 8912883U, 9437171U, 9961459U, 10485747U, 11010035U,
			11534323U, 12058611U, 12582899U, 13107187U, 13631475U, 14155763U, 14680051U, 15204339U, 15728627U, 16252915U,
			16777203U, 124913U, 255985U, 387057U, 518129U, 649201U, 780273U, 911345U, 1042417U, 1173489U,
			1304561U, 1435633U, 1566705U, 1697777U, 1828849U, 1959921U, 2090993U, 2222065U, 2353137U, 2484209U,
			2615281U, 2746353U, 2877425U, 3008497U, 3139569U, 3270641U, 3401713U, 3532785U, 3663857U, 3794929U,
			3926001U, 4057073U, 18411U
		};

		// Token: 0x04000FF5 RID: 4085
		internal static readonly uint[] FastEncoderDistanceCodeInfo = new uint[]
		{
			3846U, 130826U, 261899U, 524043U, 65305U, 16152U, 48936U, 32552U, 7991U, 24375U,
			3397U, 12102U, 84U, 7509U, 2148U, 869U, 1140U, 4981U, 3204U, 644U,
			2708U, 1684U, 3748U, 420U, 2484U, 2997U, 1476U, 7109U, 2005U, 6101U,
			0U, 256U
		};

		// Token: 0x04000FF6 RID: 4086
		internal static readonly uint[] BitMask = new uint[]
		{
			0U, 1U, 3U, 7U, 15U, 31U, 63U, 127U, 255U, 511U,
			1023U, 2047U, 4095U, 8191U, 16383U, 32767U
		};

		// Token: 0x04000FF7 RID: 4087
		internal static readonly byte[] ExtraLengthBits = new byte[]
		{
			0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
			1, 1, 2, 2, 2, 2, 3, 3, 3, 3,
			4, 4, 4, 4, 5, 5, 5, 5, 0
		};

		// Token: 0x04000FF8 RID: 4088
		internal static readonly byte[] ExtraDistanceBits = new byte[]
		{
			0, 0, 0, 0, 1, 1, 2, 2, 3, 3,
			4, 4, 5, 5, 6, 6, 7, 7, 8, 8,
			9, 9, 10, 10, 11, 11, 12, 12, 13, 13,
			0, 0
		};
	}
}
