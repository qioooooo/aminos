using System;
using System.ComponentModel;

namespace System.Data.Design
{
	// Token: 0x02000097 RID: 151
	[DataSourceXmlClass("Parameter")]
	internal class DesignParameter : DataSourceComponent, IDbDataParameter, IDataParameter, IDataSourceNamedObject, INamedObject, ICloneable
	{
		// Token: 0x1700009A RID: 154
		// (get) Token: 0x06000670 RID: 1648 RVA: 0x0000CC1A File Offset: 0x0000BC1A
		// (set) Token: 0x06000671 RID: 1649 RVA: 0x0000CC22 File Offset: 0x0000BC22
		[DefaultValue(false)]
		[DataSourceXmlAttribute]
		public bool AllowDbNull
		{
			get
			{
				return this.allowDbNull;
			}
			set
			{
				this.allowDbNull = value;
			}
		}

		// Token: 0x1700009B RID: 155
		// (get) Token: 0x06000672 RID: 1650 RVA: 0x0000CC2B File Offset: 0x0000BC2B
		// (set) Token: 0x06000673 RID: 1651 RVA: 0x0000CC33 File Offset: 0x0000BC33
		[DataSourceXmlAttribute]
		[MergableProperty(false)]
		[DefaultValue("")]
		public string ParameterName
		{
			get
			{
				return this.parameterName;
			}
			set
			{
				if (!StringUtil.EqualValue(this.ParameterName, value))
				{
					if (this.CollectionParent != null)
					{
						this.CollectionParent.ValidateUniqueName(this, value);
					}
					this.parameterName = value;
				}
			}
		}

		// Token: 0x1700009C RID: 156
		// (get) Token: 0x06000674 RID: 1652 RVA: 0x0000CC5F File Offset: 0x0000BC5F
		// (set) Token: 0x06000675 RID: 1653 RVA: 0x0000CC67 File Offset: 0x0000BC67
		[DataSourceXmlAttribute]
		public string ColumnName
		{
			get
			{
				return this.columnName;
			}
			set
			{
				this.columnName = value;
			}
		}

		// Token: 0x1700009D RID: 157
		// (get) Token: 0x06000676 RID: 1654 RVA: 0x0000CC70 File Offset: 0x0000BC70
		// (set) Token: 0x06000677 RID: 1655 RVA: 0x0000CC78 File Offset: 0x0000BC78
		[DataSourceXmlAttribute]
		[Browsable(false)]
		public string AutogeneratedName
		{
			get
			{
				return this.autogeneratedName;
			}
			set
			{
				this.autogeneratedName = value;
			}
		}

		// Token: 0x1700009E RID: 158
		// (get) Token: 0x06000678 RID: 1656 RVA: 0x0000CC81 File Offset: 0x0000BC81
		// (set) Token: 0x06000679 RID: 1657 RVA: 0x0000CC89 File Offset: 0x0000BC89
		[DataSourceXmlAttribute]
		public DbType DbType
		{
			get
			{
				return this.dbType;
			}
			set
			{
				this.dbType = value;
			}
		}

		// Token: 0x1700009F RID: 159
		// (get) Token: 0x0600067A RID: 1658 RVA: 0x0000CC92 File Offset: 0x0000BC92
		// (set) Token: 0x0600067B RID: 1659 RVA: 0x0000CC9A File Offset: 0x0000BC9A
		[DataSourceXmlAttribute]
		public string ProviderType
		{
			get
			{
				return this.providerType;
			}
			set
			{
				this.providerType = value;
			}
		}

		// Token: 0x170000A0 RID: 160
		// (get) Token: 0x0600067C RID: 1660 RVA: 0x0000CCA3 File Offset: 0x0000BCA3
		// (set) Token: 0x0600067D RID: 1661 RVA: 0x0000CCAB File Offset: 0x0000BCAB
		[DataSourceXmlAttribute]
		[DefaultValue(0)]
		public byte Precision
		{
			get
			{
				return this.precision;
			}
			set
			{
				this.precision = value;
			}
		}

		// Token: 0x170000A1 RID: 161
		// (get) Token: 0x0600067E RID: 1662 RVA: 0x0000CCB4 File Offset: 0x0000BCB4
		// (set) Token: 0x0600067F RID: 1663 RVA: 0x0000CCBC File Offset: 0x0000BCBC
		[DataSourceXmlAttribute]
		[DefaultValue(0)]
		public byte Scale
		{
			get
			{
				return this.scale;
			}
			set
			{
				this.scale = value;
			}
		}

		// Token: 0x170000A2 RID: 162
		// (get) Token: 0x06000680 RID: 1664 RVA: 0x0000CCC5 File Offset: 0x0000BCC5
		// (set) Token: 0x06000681 RID: 1665 RVA: 0x0000CCCD File Offset: 0x0000BCCD
		[DataSourceXmlAttribute]
		[DefaultValue(0)]
		public int Size
		{
			get
			{
				return this.size;
			}
			set
			{
				this.size = value;
				if (this.size < 0)
				{
					this.size = int.MaxValue;
				}
			}
		}

		// Token: 0x170000A3 RID: 163
		// (get) Token: 0x06000682 RID: 1666 RVA: 0x0000CCEA File Offset: 0x0000BCEA
		// (set) Token: 0x06000683 RID: 1667 RVA: 0x0000CCF2 File Offset: 0x0000BCF2
		[DataSourceXmlAttribute]
		[Browsable(false)]
		public string DataTypeServer
		{
			get
			{
				return this.dataTypeServer;
			}
			set
			{
				this.dataTypeServer = value;
			}
		}

		// Token: 0x170000A4 RID: 164
		// (get) Token: 0x06000684 RID: 1668 RVA: 0x0000CCFB File Offset: 0x0000BCFB
		// (set) Token: 0x06000685 RID: 1669 RVA: 0x0000CD03 File Offset: 0x0000BD03
		[DefaultValue(ParameterDirection.Input)]
		[DataSourceXmlAttribute]
		public ParameterDirection Direction
		{
			get
			{
				return this.direction;
			}
			set
			{
				this.direction = value;
			}
		}

		// Token: 0x170000A5 RID: 165
		// (get) Token: 0x06000686 RID: 1670 RVA: 0x0000CD0C File Offset: 0x0000BD0C
		// (set) Token: 0x06000687 RID: 1671 RVA: 0x0000CD14 File Offset: 0x0000BD14
		[DataSourceXmlAttribute]
		[DefaultValue("")]
		public string SourceColumn
		{
			get
			{
				return this.sourceColumn;
			}
			set
			{
				this.sourceColumn = value;
			}
		}

		// Token: 0x170000A6 RID: 166
		// (get) Token: 0x06000688 RID: 1672 RVA: 0x0000CD1D File Offset: 0x0000BD1D
		// (set) Token: 0x06000689 RID: 1673 RVA: 0x0000CD25 File Offset: 0x0000BD25
		[DataSourceXmlAttribute]
		[DefaultValue(DataRowVersion.Current)]
		public DataRowVersion SourceVersion
		{
			get
			{
				return this.sourceVersion;
			}
			set
			{
				this.sourceVersion = value;
			}
		}

		// Token: 0x170000A7 RID: 167
		// (get) Token: 0x0600068A RID: 1674 RVA: 0x0000CD2E File Offset: 0x0000BD2E
		// (set) Token: 0x0600068B RID: 1675 RVA: 0x0000CD36 File Offset: 0x0000BD36
		[DataSourceXmlAttribute]
		[Browsable(false)]
		public string DataSourceName
		{
			get
			{
				return this.dataSourceName;
			}
			set
			{
				this.dataSourceName = value;
			}
		}

		// Token: 0x170000A8 RID: 168
		// (get) Token: 0x0600068C RID: 1676 RVA: 0x0000CD3F File Offset: 0x0000BD3F
		// (set) Token: 0x0600068D RID: 1677 RVA: 0x0000CD47 File Offset: 0x0000BD47
		string INamedObject.Name
		{
			get
			{
				return this.ParameterName;
			}
			set
			{
				this.ParameterName = value;
			}
		}

		// Token: 0x170000A9 RID: 169
		// (get) Token: 0x0600068E RID: 1678 RVA: 0x0000CD50 File Offset: 0x0000BD50
		string IDataSourceNamedObject.PublicTypeName
		{
			get
			{
				return "Parameter";
			}
		}

		// Token: 0x170000AA RID: 170
		// (get) Token: 0x0600068F RID: 1679 RVA: 0x0000CD57 File Offset: 0x0000BD57
		[EditorBrowsable(EditorBrowsableState.Never)]
		[DefaultValue(false)]
		[DesignOnly(true)]
		[Browsable(false)]
		public bool IsNullable
		{
			get
			{
				return true;
			}
		}

		// Token: 0x170000AB RID: 171
		// (get) Token: 0x06000690 RID: 1680 RVA: 0x0000CD5A File Offset: 0x0000BD5A
		// (set) Token: 0x06000691 RID: 1681 RVA: 0x0000CD5D File Offset: 0x0000BD5D
		[Browsable(false)]
		[DefaultValue(null)]
		public object Value
		{
			get
			{
				return null;
			}
			set
			{
			}
		}

		// Token: 0x170000AC RID: 172
		// (get) Token: 0x06000692 RID: 1682 RVA: 0x0000CD5F File Offset: 0x0000BD5F
		[Browsable(false)]
		public string Name
		{
			get
			{
				return this.ParameterName;
			}
		}

		// Token: 0x170000AD RID: 173
		// (get) Token: 0x06000693 RID: 1683 RVA: 0x0000CD67 File Offset: 0x0000BD67
		// (set) Token: 0x06000694 RID: 1684 RVA: 0x0000CD6F File Offset: 0x0000BD6F
		[DefaultValue(false)]
		[DataSourceXmlAttribute]
		public bool SourceColumnNullMapping
		{
			get
			{
				return this.sourceColumnNullMapping;
			}
			set
			{
				this.sourceColumnNullMapping = value;
			}
		}

		// Token: 0x06000695 RID: 1685 RVA: 0x0000CD78 File Offset: 0x0000BD78
		public override string ToString()
		{
			return this.ParameterName;
		}

		// Token: 0x06000696 RID: 1686 RVA: 0x0000CD80 File Offset: 0x0000BD80
		public DesignParameter()
			: this(string.Empty)
		{
		}

		// Token: 0x06000697 RID: 1687 RVA: 0x0000CD8D File Offset: 0x0000BD8D
		public DesignParameter(string name)
		{
			this.parameterName = name;
			this.autogeneratedName = string.Empty;
			this.direction = ParameterDirection.Input;
			this.sourceVersion = DataRowVersion.Current;
			this.dataSourceName = string.Empty;
		}

		// Token: 0x06000698 RID: 1688 RVA: 0x0000CDC4 File Offset: 0x0000BDC4
		public override bool Equals(object o)
		{
			DesignParameter designParameter = o as DesignParameter;
			return designParameter != null && designParameter.ParameterName.Equals(this.ParameterName);
		}

		// Token: 0x06000699 RID: 1689 RVA: 0x0000CDEE File Offset: 0x0000BDEE
		public override int GetHashCode()
		{
			return this.ParameterName.GetHashCode();
		}

		// Token: 0x0600069A RID: 1690 RVA: 0x0000CDFC File Offset: 0x0000BDFC
		public object Clone()
		{
			return new DesignParameter(this.ParameterName)
			{
				ColumnName = this.ColumnName,
				AutogeneratedName = this.AutogeneratedName,
				DbType = this.DbType,
				Precision = this.Precision,
				Scale = this.Scale,
				Size = this.Size,
				DataTypeServer = this.DataTypeServer,
				Direction = this.Direction,
				SourceColumn = this.SourceColumn,
				SourceVersion = this.SourceVersion,
				SourceColumnNullMapping = this.SourceColumnNullMapping
			};
		}

		// Token: 0x0600069B RID: 1691 RVA: 0x0000CE9C File Offset: 0x0000BE9C
		public static DesignParameter GetDefaultRetvalParam()
		{
			DesignParameter designParameter = new DesignParameter("RETURN_VALUE");
			designParameter.DbType = DbType.Int32;
			designParameter.Precision = (designParameter.Scale = 0);
			designParameter.Size = 4;
			designParameter.Direction = ParameterDirection.ReturnValue;
			return designParameter;
		}

		// Token: 0x04000B3A RID: 2874
		public const string DEFAULT_RETVAL_NAME = "RETURN_VALUE";

		// Token: 0x04000B3B RID: 2875
		private string parameterName;

		// Token: 0x04000B3C RID: 2876
		private string columnName;

		// Token: 0x04000B3D RID: 2877
		private string autogeneratedName;

		// Token: 0x04000B3E RID: 2878
		private DbType dbType;

		// Token: 0x04000B3F RID: 2879
		private byte precision;

		// Token: 0x04000B40 RID: 2880
		private byte scale;

		// Token: 0x04000B41 RID: 2881
		private int size;

		// Token: 0x04000B42 RID: 2882
		private string dataTypeServer;

		// Token: 0x04000B43 RID: 2883
		private ParameterDirection direction;

		// Token: 0x04000B44 RID: 2884
		private string sourceColumn;

		// Token: 0x04000B45 RID: 2885
		private DataRowVersion sourceVersion;

		// Token: 0x04000B46 RID: 2886
		private string dataSourceName;

		// Token: 0x04000B47 RID: 2887
		private bool sourceColumnNullMapping;

		// Token: 0x04000B48 RID: 2888
		private bool allowDbNull;

		// Token: 0x04000B49 RID: 2889
		private string providerType;

		// Token: 0x04000B4A RID: 2890
		private static int[] adoDataType2DbType = new int[]
		{
			8, 0, 20, 12, 128, 1, 11, 3, 129, 0,
			6, 4, 7, 5, 133, 5, 134, 6, 135, 6,
			14, 7, 5, 8, 0, 13, 10, 13, 64, 6,
			72, 9, 9, 13, 13, 13, 3, 11, 205, 1,
			201, 0, 203, 16, 131, 7, 138, 13, 4, 15,
			2, 10, 16, 14, 21, 20, 19, 19, 18, 18,
			17, 2, 204, 1, 200, 0, 139, 21, 202, 16,
			12, 13, 130, 16
		};
	}
}
